"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StaticTopicTransportStrategy = exports.StaticTopicGrpcConfiguration = void 0;
class StaticTopicGrpcConfiguration {
    constructor(props) {
        if (props.numClients !== undefined && props.numClients !== null) {
            this.numClients = props.numClients;
        }
        else {
            this.numClients = 1;
        }
        this.keepAliveTimeMs = props.keepAliveTimeMs;
        this.keepAliveTimeoutMs = props.keepAliveTimeoutMs;
        this.keepAlivePermitWithoutCalls = props.keepAlivePermitWithoutCalls;
    }
    getNumClients() {
        return this.numClients;
    }
    withNumClients(numClients) {
        return new StaticTopicGrpcConfiguration({
            ...this,
            numClients,
        });
    }
    getKeepAliveTimeoutMS() {
        return this.keepAliveTimeoutMs;
    }
    getKeepAliveTimeMS() {
        return this.keepAliveTimeMs;
    }
    getKeepAlivePermitWithoutCalls() {
        return this.keepAlivePermitWithoutCalls;
    }
}
exports.StaticTopicGrpcConfiguration = StaticTopicGrpcConfiguration;
class StaticTopicTransportStrategy {
    constructor(props) {
        this.grpcConfiguration = props.grpcConfiguration;
    }
    getGrpcConfig() {
        return this.grpcConfiguration;
    }
    withGrpcConfig(grpcConfiguration) {
        return new StaticTopicTransportStrategy({
            ...this,
            grpcConfiguration,
        });
    }
}
exports.StaticTopicTransportStrategy = StaticTopicTransportStrategy;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNwb3J0LXN0cmF0ZWd5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbmZpZy90cmFuc3BvcnQvdG9waWNzL3RyYW5zcG9ydC1zdHJhdGVneS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUE0QkEsTUFBYSw0QkFBNEI7SUFNdkMsWUFBWSxLQUFrQztRQUM1QyxJQUFJLEtBQUssQ0FBQyxVQUFVLEtBQUssU0FBUyxJQUFJLEtBQUssQ0FBQyxVQUFVLEtBQUssSUFBSSxFQUFFO1lBQy9ELElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDLFVBQVUsQ0FBQztTQUNwQzthQUFNO1lBQ0wsSUFBSSxDQUFDLFVBQVUsR0FBRyxDQUFDLENBQUM7U0FDckI7UUFFRCxJQUFJLENBQUMsZUFBZSxHQUFHLEtBQUssQ0FBQyxlQUFlLENBQUM7UUFDN0MsSUFBSSxDQUFDLGtCQUFrQixHQUFHLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQztRQUNuRCxJQUFJLENBQUMsMkJBQTJCLEdBQUcsS0FBSyxDQUFDLDJCQUEyQixDQUFDO0lBQ3ZFLENBQUM7SUFFRCxhQUFhO1FBQ1gsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO0lBQ3pCLENBQUM7SUFFRCxjQUFjLENBQUMsVUFBa0I7UUFDL0IsT0FBTyxJQUFJLDRCQUE0QixDQUFDO1lBQ3RDLEdBQUcsSUFBSTtZQUNQLFVBQVU7U0FDWCxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQscUJBQXFCO1FBQ25CLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDO0lBQ2pDLENBQUM7SUFFRCxrQkFBa0I7UUFDaEIsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDO0lBQzlCLENBQUM7SUFFRCw4QkFBOEI7UUFDNUIsT0FBTyxJQUFJLENBQUMsMkJBQTJCLENBQUM7SUFDMUMsQ0FBQztDQUNGO0FBeENELG9FQXdDQztBQUVELE1BQWEsNEJBQTRCO0lBR3ZDLFlBQVksS0FBa0M7UUFDNUMsSUFBSSxDQUFDLGlCQUFpQixHQUFHLEtBQUssQ0FBQyxpQkFBaUIsQ0FBQztJQUNuRCxDQUFDO0lBRUQsYUFBYTtRQUNYLE9BQU8sSUFBSSxDQUFDLGlCQUFpQixDQUFDO0lBQ2hDLENBQUM7SUFFRCxjQUFjLENBQ1osaUJBQXlDO1FBRXpDLE9BQU8sSUFBSSw0QkFBNEIsQ0FBQztZQUN0QyxHQUFHLElBQUk7WUFDUCxpQkFBaUI7U0FDbEIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztDQUNGO0FBbkJELG9FQW1CQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIFRvcGljR3JwY0NvbmZpZ3VyYXRpb24sXG4gIFRvcGljR3JwY0NvbmZpZ3VyYXRpb25Qcm9wcyxcbn0gZnJvbSAnLi9ncnBjLWNvbmZpZ3VyYXRpb24nO1xuXG5leHBvcnQgaW50ZXJmYWNlIFRvcGljVHJhbnNwb3J0U3RyYXRlZ3kge1xuICAvKipcbiAgICogQ29uZmlndXJlcyB0aGUgbG93LWxldmVsIGdSUEMgc2V0dGluZ3MgZm9yIHRoZSBNb21lbnRvIGNsaWVudCdzIGNvbW11bmljYXRpb25cbiAgICogd2l0aCB0aGUgTW9tZW50byBzZXJ2ZXIuXG4gICAqIEByZXR1cm5zIHtUb3BpY0dycGNDb25maWd1cmF0aW9ufVxuICAgKi9cbiAgZ2V0R3JwY0NvbmZpZygpOiBUb3BpY0dycGNDb25maWd1cmF0aW9uO1xuXG4gIC8qKlxuICAgKiBDb3B5IGNvbnN0cnVjdG9yIGZvciBvdmVycmlkaW5nIHRoZSBnUlBDIGNvbmZpZ3VyYXRpb25cbiAgICogQHBhcmFtIHtUb3BpY0dycGNDb25maWd1cmF0aW9ufSBncnBjQ29uZmlnXG4gICAqIEByZXR1cm5zIHtUb3BpY1RyYW5zcG9ydFN0cmF0ZWd5fSBhIG5ldyBUcmFuc3BvcnRTdHJhdGVneSB3aXRoIHRoZSBzcGVjaWZpZWQgZ1JQQyBjb25maWcuXG4gICAqL1xuICB3aXRoR3JwY0NvbmZpZyhncnBjQ29uZmlnOiBUb3BpY0dycGNDb25maWd1cmF0aW9uKTogVG9waWNUcmFuc3BvcnRTdHJhdGVneTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBUb3BpY1RyYW5zcG9ydFN0cmF0ZWd5UHJvcHMge1xuICAvKipcbiAgICogbG93LWxldmVsIGdSUEMgc2V0dGluZ3MgZm9yIGNvbW11bmljYXRpb24gd2l0aCB0aGUgTW9tZW50byBzZXJ2ZXJcbiAgICovXG4gIGdycGNDb25maWd1cmF0aW9uOiBUb3BpY0dycGNDb25maWd1cmF0aW9uO1xufVxuXG5leHBvcnQgY2xhc3MgU3RhdGljVG9waWNHcnBjQ29uZmlndXJhdGlvbiBpbXBsZW1lbnRzIFRvcGljR3JwY0NvbmZpZ3VyYXRpb24ge1xuICBwcml2YXRlIHJlYWRvbmx5IG51bUNsaWVudHM6IG51bWJlcjtcbiAgcHJpdmF0ZSByZWFkb25seSBrZWVwQWxpdmVQZXJtaXRXaXRob3V0Q2FsbHM/OiBudW1iZXI7XG4gIHByaXZhdGUgcmVhZG9ubHkga2VlcEFsaXZlVGltZW91dE1zPzogbnVtYmVyO1xuICBwcml2YXRlIHJlYWRvbmx5IGtlZXBBbGl2ZVRpbWVNcz86IG51bWJlcjtcblxuICBjb25zdHJ1Y3Rvcihwcm9wczogVG9waWNHcnBjQ29uZmlndXJhdGlvblByb3BzKSB7XG4gICAgaWYgKHByb3BzLm51bUNsaWVudHMgIT09IHVuZGVmaW5lZCAmJiBwcm9wcy5udW1DbGllbnRzICE9PSBudWxsKSB7XG4gICAgICB0aGlzLm51bUNsaWVudHMgPSBwcm9wcy5udW1DbGllbnRzO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLm51bUNsaWVudHMgPSAxO1xuICAgIH1cblxuICAgIHRoaXMua2VlcEFsaXZlVGltZU1zID0gcHJvcHMua2VlcEFsaXZlVGltZU1zO1xuICAgIHRoaXMua2VlcEFsaXZlVGltZW91dE1zID0gcHJvcHMua2VlcEFsaXZlVGltZW91dE1zO1xuICAgIHRoaXMua2VlcEFsaXZlUGVybWl0V2l0aG91dENhbGxzID0gcHJvcHMua2VlcEFsaXZlUGVybWl0V2l0aG91dENhbGxzO1xuICB9XG5cbiAgZ2V0TnVtQ2xpZW50cygpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLm51bUNsaWVudHM7XG4gIH1cblxuICB3aXRoTnVtQ2xpZW50cyhudW1DbGllbnRzOiBudW1iZXIpOiBUb3BpY0dycGNDb25maWd1cmF0aW9uIHtcbiAgICByZXR1cm4gbmV3IFN0YXRpY1RvcGljR3JwY0NvbmZpZ3VyYXRpb24oe1xuICAgICAgLi4udGhpcyxcbiAgICAgIG51bUNsaWVudHMsXG4gICAgfSk7XG4gIH1cblxuICBnZXRLZWVwQWxpdmVUaW1lb3V0TVMoKTogbnVtYmVyIHwgdW5kZWZpbmVkIHtcbiAgICByZXR1cm4gdGhpcy5rZWVwQWxpdmVUaW1lb3V0TXM7XG4gIH1cblxuICBnZXRLZWVwQWxpdmVUaW1lTVMoKTogbnVtYmVyIHwgdW5kZWZpbmVkIHtcbiAgICByZXR1cm4gdGhpcy5rZWVwQWxpdmVUaW1lTXM7XG4gIH1cblxuICBnZXRLZWVwQWxpdmVQZXJtaXRXaXRob3V0Q2FsbHMoKTogbnVtYmVyIHwgdW5kZWZpbmVkIHtcbiAgICByZXR1cm4gdGhpcy5rZWVwQWxpdmVQZXJtaXRXaXRob3V0Q2FsbHM7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIFN0YXRpY1RvcGljVHJhbnNwb3J0U3RyYXRlZ3kgaW1wbGVtZW50cyBUb3BpY1RyYW5zcG9ydFN0cmF0ZWd5IHtcbiAgcHJpdmF0ZSByZWFkb25seSBncnBjQ29uZmlndXJhdGlvbjogVG9waWNHcnBjQ29uZmlndXJhdGlvbjtcblxuICBjb25zdHJ1Y3Rvcihwcm9wczogVG9waWNUcmFuc3BvcnRTdHJhdGVneVByb3BzKSB7XG4gICAgdGhpcy5ncnBjQ29uZmlndXJhdGlvbiA9IHByb3BzLmdycGNDb25maWd1cmF0aW9uO1xuICB9XG5cbiAgZ2V0R3JwY0NvbmZpZygpOiBUb3BpY0dycGNDb25maWd1cmF0aW9uIHtcbiAgICByZXR1cm4gdGhpcy5ncnBjQ29uZmlndXJhdGlvbjtcbiAgfVxuXG4gIHdpdGhHcnBjQ29uZmlnKFxuICAgIGdycGNDb25maWd1cmF0aW9uOiBUb3BpY0dycGNDb25maWd1cmF0aW9uXG4gICk6IFN0YXRpY1RvcGljVHJhbnNwb3J0U3RyYXRlZ3kge1xuICAgIHJldHVybiBuZXcgU3RhdGljVG9waWNUcmFuc3BvcnRTdHJhdGVneSh7XG4gICAgICAuLi50aGlzLFxuICAgICAgZ3JwY0NvbmZpZ3VyYXRpb24sXG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==