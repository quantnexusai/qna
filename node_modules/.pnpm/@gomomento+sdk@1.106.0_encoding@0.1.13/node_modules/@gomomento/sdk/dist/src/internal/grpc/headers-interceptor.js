"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HeaderInterceptor = exports.Header = void 0;
const grpc_js_1 = require("@grpc/grpc-js");
class Header {
    /**
     * @param {string} name
     * @param {string} value
     */
    constructor(name, value) {
        this.onceOnlyHeaders = ['agent', 'runtime-version'];
        this.name = name;
        this.value = value;
    }
}
exports.Header = Header;
class HeaderInterceptor {
    static createHeadersInterceptor(headers) {
        const headersToAddOnce = headers.filter(header => header.onceOnlyHeaders.includes(header.name));
        const headersToAddEveryTime = headers.filter(header => !header.onceOnlyHeaders.includes(header.name));
        let areOnlyOnceHeadersSent = false;
        return (options, nextCall) => {
            return new grpc_js_1.InterceptingCall(nextCall(options), {
                start: (metadata, listener, next) => {
                    headersToAddEveryTime.forEach(h => {
                        metadata.set(h.name, h.value);
                    });
                    if (!areOnlyOnceHeadersSent) {
                        areOnlyOnceHeadersSent = true;
                        headersToAddOnce.forEach(h => metadata.add(h.name, h.value));
                    }
                    next(metadata, {});
                },
            });
        };
    }
}
exports.HeaderInterceptor = HeaderInterceptor;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVycy1pbnRlcmNlcHRvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9pbnRlcm5hbC9ncnBjL2hlYWRlcnMtaW50ZXJjZXB0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsMkNBQTREO0FBRTVELE1BQWEsTUFBTTtJQUtqQjs7O09BR0c7SUFDSCxZQUFZLElBQVksRUFBRSxLQUFhO1FBUnZCLG9CQUFlLEdBQWEsQ0FBQyxPQUFPLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztRQVN2RSxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztJQUNyQixDQUFDO0NBQ0Y7QUFiRCx3QkFhQztBQUVELE1BQWEsaUJBQWlCO0lBQ3JCLE1BQU0sQ0FBQyx3QkFBd0IsQ0FBQyxPQUFpQjtRQUN0RCxNQUFNLGdCQUFnQixHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FDL0MsTUFBTSxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUM3QyxDQUFDO1FBQ0YsTUFBTSxxQkFBcUIsR0FBRyxPQUFPLENBQUMsTUFBTSxDQUMxQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUN4RCxDQUFDO1FBQ0YsSUFBSSxzQkFBc0IsR0FBRyxLQUFLLENBQUM7UUFDbkMsT0FBTyxDQUFDLE9BQU8sRUFBRSxRQUFRLEVBQUUsRUFBRTtZQUMzQixPQUFPLElBQUksMEJBQWdCLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxFQUFFO2dCQUM3QyxLQUFLLEVBQUUsQ0FBQyxRQUFRLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxFQUFFO29CQUNsQyxxQkFBcUIsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUU7d0JBQ2hDLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7b0JBQ2hDLENBQUMsQ0FBQyxDQUFDO29CQUNILElBQUksQ0FBQyxzQkFBc0IsRUFBRTt3QkFDM0Isc0JBQXNCLEdBQUcsSUFBSSxDQUFDO3dCQUM5QixnQkFBZ0IsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7cUJBQzlEO29CQUNELElBQUksQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDLENBQUM7Z0JBQ3JCLENBQUM7YUFDRixDQUFDLENBQUM7UUFDTCxDQUFDLENBQUM7SUFDSixDQUFDO0NBQ0Y7QUF4QkQsOENBd0JDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbnRlcmNlcHRpbmdDYWxsLCBJbnRlcmNlcHRvcn0gZnJvbSAnQGdycGMvZ3JwYy1qcyc7XG5cbmV4cG9ydCBjbGFzcyBIZWFkZXIge1xuICBwdWJsaWMgcmVhZG9ubHkgb25jZU9ubHlIZWFkZXJzOiBzdHJpbmdbXSA9IFsnYWdlbnQnLCAncnVudGltZS12ZXJzaW9uJ107XG4gIHB1YmxpYyByZWFkb25seSBuYW1lOiBzdHJpbmc7XG4gIHB1YmxpYyByZWFkb25seSB2YWx1ZTogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZVxuICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcbiAgICovXG4gIGNvbnN0cnVjdG9yKG5hbWU6IHN0cmluZywgdmFsdWU6IHN0cmluZykge1xuICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBIZWFkZXJJbnRlcmNlcHRvciB7XG4gIHB1YmxpYyBzdGF0aWMgY3JlYXRlSGVhZGVyc0ludGVyY2VwdG9yKGhlYWRlcnM6IEhlYWRlcltdKTogSW50ZXJjZXB0b3Ige1xuICAgIGNvbnN0IGhlYWRlcnNUb0FkZE9uY2UgPSBoZWFkZXJzLmZpbHRlcihoZWFkZXIgPT5cbiAgICAgIGhlYWRlci5vbmNlT25seUhlYWRlcnMuaW5jbHVkZXMoaGVhZGVyLm5hbWUpXG4gICAgKTtcbiAgICBjb25zdCBoZWFkZXJzVG9BZGRFdmVyeVRpbWUgPSBoZWFkZXJzLmZpbHRlcihcbiAgICAgIGhlYWRlciA9PiAhaGVhZGVyLm9uY2VPbmx5SGVhZGVycy5pbmNsdWRlcyhoZWFkZXIubmFtZSlcbiAgICApO1xuICAgIGxldCBhcmVPbmx5T25jZUhlYWRlcnNTZW50ID0gZmFsc2U7XG4gICAgcmV0dXJuIChvcHRpb25zLCBuZXh0Q2FsbCkgPT4ge1xuICAgICAgcmV0dXJuIG5ldyBJbnRlcmNlcHRpbmdDYWxsKG5leHRDYWxsKG9wdGlvbnMpLCB7XG4gICAgICAgIHN0YXJ0OiAobWV0YWRhdGEsIGxpc3RlbmVyLCBuZXh0KSA9PiB7XG4gICAgICAgICAgaGVhZGVyc1RvQWRkRXZlcnlUaW1lLmZvckVhY2goaCA9PiB7XG4gICAgICAgICAgICBtZXRhZGF0YS5zZXQoaC5uYW1lLCBoLnZhbHVlKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBpZiAoIWFyZU9ubHlPbmNlSGVhZGVyc1NlbnQpIHtcbiAgICAgICAgICAgIGFyZU9ubHlPbmNlSGVhZGVyc1NlbnQgPSB0cnVlO1xuICAgICAgICAgICAgaGVhZGVyc1RvQWRkT25jZS5mb3JFYWNoKGggPT4gbWV0YWRhdGEuYWRkKGgubmFtZSwgaC52YWx1ZSkpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBuZXh0KG1ldGFkYXRhLCB7fSk7XG4gICAgICAgIH0sXG4gICAgICB9KTtcbiAgICB9O1xuICB9XG59XG4iXX0=