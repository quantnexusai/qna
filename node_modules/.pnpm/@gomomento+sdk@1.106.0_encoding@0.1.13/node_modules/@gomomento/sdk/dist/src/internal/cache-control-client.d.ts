import { CreateCache, DeleteCache, ListCaches, CacheFlush, CredentialProvider } from '..';
import { Configuration } from '../config/configuration';
export interface ControlClientProps {
    configuration: Configuration;
    credentialProvider: CredentialProvider;
}
export declare class CacheControlClient {
    private readonly clientWrapper;
    private readonly interceptors;
    private static readonly REQUEST_TIMEOUT_MS;
    private readonly logger;
    private readonly cacheServiceErrorMapper;
    /**
     * @param {ControlClientProps} props
     */
    constructor(props: ControlClientProps);
    close(): void;
    createCache(name: string): Promise<CreateCache.Response>;
    deleteCache(name: string): Promise<DeleteCache.Response>;
    flushCache(cacheName: string): Promise<CacheFlush.Response>;
    private sendFlushCache;
    listCaches(): Promise<ListCaches.Response>;
}
