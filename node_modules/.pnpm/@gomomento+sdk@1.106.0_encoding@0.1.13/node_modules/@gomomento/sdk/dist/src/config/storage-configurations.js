"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Laptop = void 0;
const default_momento_logger_1 = require("./logging/default-momento-logger");
const storage_configuration_1 = require("./storage-configuration");
const storage_1 = require("./transport/storage");
const fixed_timeout_retry_strategy_1 = require("./retry/fixed-timeout-retry-strategy");
const defaultLoggerFactory = new default_momento_logger_1.DefaultMomentoLoggerFactory();
function defaultRetryStrategy(loggerFactory) {
    return new fixed_timeout_retry_strategy_1.FixedTimeoutRetryStrategy({
        loggerFactory: loggerFactory,
    });
}
/**
 * Laptop config provides defaults suitable for a medium-to-high-latency dev environment.
 * @export
 * @class Laptop
 */
class Laptop extends storage_configuration_1.StorageClientConfiguration {
    /**
     * Provides the latest recommended configuration for a laptop development environment.  NOTE: this configuration may
     * change in future releases to take advantage of improvements we identify for default configurations.
     * @param {MomentoLoggerFactory} [loggerFactory=defaultLoggerFactory]
     * @returns {StorageConfiguration}
     */
    static latest(loggerFactory = defaultLoggerFactory) {
        return new storage_configuration_1.StorageClientConfiguration({
            loggerFactory: loggerFactory,
            transportStrategy: new storage_1.StaticStorageTransportStrategy({
                grpcConfiguration: new storage_1.StaticStorageGrpcConfiguration({
                    deadlineMillis: 5000,
                }),
            }),
            retryStrategy: defaultRetryStrategy(loggerFactory),
        });
    }
}
exports.Laptop = Laptop;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmFnZS1jb25maWd1cmF0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb25maWcvc3RvcmFnZS1jb25maWd1cmF0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSw2RUFBNkU7QUFDN0UsbUVBR2lDO0FBQ2pDLGlEQUc2QjtBQUM3Qix1RkFBK0U7QUFHL0UsTUFBTSxvQkFBb0IsR0FDeEIsSUFBSSxvREFBMkIsRUFBRSxDQUFDO0FBRXBDLFNBQVMsb0JBQW9CLENBQzNCLGFBQW1DO0lBRW5DLE9BQU8sSUFBSSx3REFBeUIsQ0FBQztRQUNuQyxhQUFhLEVBQUUsYUFBYTtLQUM3QixDQUFDLENBQUM7QUFDTCxDQUFDO0FBRUQ7Ozs7R0FJRztBQUNILE1BQWEsTUFBTyxTQUFRLGtEQUEwQjtJQUNwRDs7Ozs7T0FLRztJQUNILE1BQU0sQ0FBQyxNQUFNLENBQ1gsZ0JBQXNDLG9CQUFvQjtRQUUxRCxPQUFPLElBQUksa0RBQTBCLENBQUM7WUFDcEMsYUFBYSxFQUFFLGFBQWE7WUFDNUIsaUJBQWlCLEVBQUUsSUFBSSx3Q0FBOEIsQ0FBQztnQkFDcEQsaUJBQWlCLEVBQUUsSUFBSSx3Q0FBOEIsQ0FBQztvQkFDcEQsY0FBYyxFQUFFLElBQUk7aUJBQ3JCLENBQUM7YUFDSCxDQUFDO1lBQ0YsYUFBYSxFQUFFLG9CQUFvQixDQUFDLGFBQWEsQ0FBQztTQUNuRCxDQUFDLENBQUM7SUFDTCxDQUFDO0NBQ0Y7QUFwQkQsd0JBb0JDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtNb21lbnRvTG9nZ2VyRmFjdG9yeX0gZnJvbSAnQGdvbW9tZW50by9zZGstY29yZSc7XG5pbXBvcnQge0RlZmF1bHRNb21lbnRvTG9nZ2VyRmFjdG9yeX0gZnJvbSAnLi9sb2dnaW5nL2RlZmF1bHQtbW9tZW50by1sb2dnZXInO1xuaW1wb3J0IHtcbiAgU3RvcmFnZUNsaWVudENvbmZpZ3VyYXRpb24sXG4gIFN0b3JhZ2VDb25maWd1cmF0aW9uLFxufSBmcm9tICcuL3N0b3JhZ2UtY29uZmlndXJhdGlvbic7XG5pbXBvcnQge1xuICBTdGF0aWNTdG9yYWdlR3JwY0NvbmZpZ3VyYXRpb24sXG4gIFN0YXRpY1N0b3JhZ2VUcmFuc3BvcnRTdHJhdGVneSxcbn0gZnJvbSAnLi90cmFuc3BvcnQvc3RvcmFnZSc7XG5pbXBvcnQge0ZpeGVkVGltZW91dFJldHJ5U3RyYXRlZ3l9IGZyb20gJy4vcmV0cnkvZml4ZWQtdGltZW91dC1yZXRyeS1zdHJhdGVneSc7XG5pbXBvcnQge1JldHJ5U3RyYXRlZ3l9IGZyb20gJy4vcmV0cnkvcmV0cnktc3RyYXRlZ3knO1xuXG5jb25zdCBkZWZhdWx0TG9nZ2VyRmFjdG9yeTogTW9tZW50b0xvZ2dlckZhY3RvcnkgPVxuICBuZXcgRGVmYXVsdE1vbWVudG9Mb2dnZXJGYWN0b3J5KCk7XG5cbmZ1bmN0aW9uIGRlZmF1bHRSZXRyeVN0cmF0ZWd5KFxuICBsb2dnZXJGYWN0b3J5OiBNb21lbnRvTG9nZ2VyRmFjdG9yeVxuKTogUmV0cnlTdHJhdGVneSB7XG4gIHJldHVybiBuZXcgRml4ZWRUaW1lb3V0UmV0cnlTdHJhdGVneSh7XG4gICAgbG9nZ2VyRmFjdG9yeTogbG9nZ2VyRmFjdG9yeSxcbiAgfSk7XG59XG5cbi8qKlxuICogTGFwdG9wIGNvbmZpZyBwcm92aWRlcyBkZWZhdWx0cyBzdWl0YWJsZSBmb3IgYSBtZWRpdW0tdG8taGlnaC1sYXRlbmN5IGRldiBlbnZpcm9ubWVudC5cbiAqIEBleHBvcnRcbiAqIEBjbGFzcyBMYXB0b3BcbiAqL1xuZXhwb3J0IGNsYXNzIExhcHRvcCBleHRlbmRzIFN0b3JhZ2VDbGllbnRDb25maWd1cmF0aW9uIHtcbiAgLyoqXG4gICAqIFByb3ZpZGVzIHRoZSBsYXRlc3QgcmVjb21tZW5kZWQgY29uZmlndXJhdGlvbiBmb3IgYSBsYXB0b3AgZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnQuICBOT1RFOiB0aGlzIGNvbmZpZ3VyYXRpb24gbWF5XG4gICAqIGNoYW5nZSBpbiBmdXR1cmUgcmVsZWFzZXMgdG8gdGFrZSBhZHZhbnRhZ2Ugb2YgaW1wcm92ZW1lbnRzIHdlIGlkZW50aWZ5IGZvciBkZWZhdWx0IGNvbmZpZ3VyYXRpb25zLlxuICAgKiBAcGFyYW0ge01vbWVudG9Mb2dnZXJGYWN0b3J5fSBbbG9nZ2VyRmFjdG9yeT1kZWZhdWx0TG9nZ2VyRmFjdG9yeV1cbiAgICogQHJldHVybnMge1N0b3JhZ2VDb25maWd1cmF0aW9ufVxuICAgKi9cbiAgc3RhdGljIGxhdGVzdChcbiAgICBsb2dnZXJGYWN0b3J5OiBNb21lbnRvTG9nZ2VyRmFjdG9yeSA9IGRlZmF1bHRMb2dnZXJGYWN0b3J5XG4gICk6IFN0b3JhZ2VDb25maWd1cmF0aW9uIHtcbiAgICByZXR1cm4gbmV3IFN0b3JhZ2VDbGllbnRDb25maWd1cmF0aW9uKHtcbiAgICAgIGxvZ2dlckZhY3Rvcnk6IGxvZ2dlckZhY3RvcnksXG4gICAgICB0cmFuc3BvcnRTdHJhdGVneTogbmV3IFN0YXRpY1N0b3JhZ2VUcmFuc3BvcnRTdHJhdGVneSh7XG4gICAgICAgIGdycGNDb25maWd1cmF0aW9uOiBuZXcgU3RhdGljU3RvcmFnZUdycGNDb25maWd1cmF0aW9uKHtcbiAgICAgICAgICBkZWFkbGluZU1pbGxpczogNTAwMCxcbiAgICAgICAgfSksXG4gICAgICB9KSxcbiAgICAgIHJldHJ5U3RyYXRlZ3k6IGRlZmF1bHRSZXRyeVN0cmF0ZWd5KGxvZ2dlckZhY3RvcnkpLFxuICAgIH0pO1xuICB9XG59XG4iXX0=