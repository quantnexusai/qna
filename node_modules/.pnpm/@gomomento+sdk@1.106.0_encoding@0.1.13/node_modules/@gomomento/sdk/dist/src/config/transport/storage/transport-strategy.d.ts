import { StorageGrpcConfiguration, StorageGrpcConfigurationProps } from './grpc-configuration';
export interface StorageTransportStrategy {
    /**
     * Configures the low-level gRPC settings for the Momento client's communication
     * with the Momento server.
     * @returns {StorageGrpcConfiguration}
     */
    getGrpcConfig(): StorageGrpcConfiguration;
    /**
     * Copy constructor for overriding the gRPC configuration
     * @param {TopicGrpcConfiguration} grpcConfig
     * @returns {TopicTransportStrategy} a new StorageTransportStrategy with the specified gRPC config.
     */
    withGrpcConfig(grpcConfig: StorageGrpcConfiguration): StorageTransportStrategy;
    /**
     * Copy constructor to update the client-side timeout
     * @param {number} clientTimeoutMillis
     * @returns {StorageTransportStrategy} a new StorageTransportStrategy with the specified client timeout
     */
    withClientTimeoutMillis(clientTimeoutMillis: number): StorageTransportStrategy;
}
export interface StorageTransportStrategyProps {
    /**
     * low-level gRPC settings for communication with the Momento server
     */
    grpcConfiguration: StorageGrpcConfiguration;
}
export declare class StaticStorageGrpcConfiguration implements StorageGrpcConfiguration {
    private readonly deadlineMillis;
    constructor(props: StorageGrpcConfigurationProps);
    getDeadlineMillis(): number;
    withDeadlineMillis(deadlineMillis: number): StorageGrpcConfiguration;
}
export declare class StaticStorageTransportStrategy implements StorageTransportStrategy {
    private readonly grpcConfig;
    constructor(props: StorageTransportStrategyProps);
    getGrpcConfig(): StorageGrpcConfiguration;
    withGrpcConfig(grpcConfiguration: StorageGrpcConfiguration): StorageTransportStrategy;
    withClientTimeoutMillis(clientTimeoutMillis: number): StorageTransportStrategy;
}
