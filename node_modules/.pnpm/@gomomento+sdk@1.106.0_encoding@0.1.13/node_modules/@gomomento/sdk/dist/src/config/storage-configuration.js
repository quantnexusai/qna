"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StorageClientConfiguration = void 0;
class StorageClientConfiguration {
    constructor(props) {
        this.loggerFactory = props.loggerFactory;
        this.transportStrategy = props.transportStrategy;
        this.retryStrategy = props.retryStrategy;
    }
    getLoggerFactory() {
        return this.loggerFactory;
    }
    getTransportStrategy() {
        return this.transportStrategy;
    }
    getRetryStrategy() {
        return this.retryStrategy;
    }
    withClientTimeoutMillis(clientTimeoutMillis) {
        return new StorageClientConfiguration({
            ...this,
            transportStrategy: this.transportStrategy.withClientTimeoutMillis(clientTimeoutMillis),
        });
    }
    withTransportStrategy(transportStrategy) {
        return new StorageClientConfiguration({
            ...this,
            transportStrategy,
        });
    }
    withRetryStrategy(retryStrategy) {
        return new StorageClientConfiguration({
            ...this,
            retryStrategy,
        });
    }
}
exports.StorageClientConfiguration = StorageClientConfiguration;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmFnZS1jb25maWd1cmF0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbmZpZy9zdG9yYWdlLWNvbmZpZ3VyYXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBZ0VBLE1BQWEsMEJBQTBCO0lBS3JDLFlBQVksS0FBZ0M7UUFDMUMsSUFBSSxDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUMsYUFBYSxDQUFDO1FBQ3pDLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxLQUFLLENBQUMsaUJBQWlCLENBQUM7UUFDakQsSUFBSSxDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUMsYUFBYSxDQUFDO0lBQzNDLENBQUM7SUFFRCxnQkFBZ0I7UUFDZCxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUM7SUFDNUIsQ0FBQztJQUVELG9CQUFvQjtRQUNsQixPQUFPLElBQUksQ0FBQyxpQkFBaUIsQ0FBQztJQUNoQyxDQUFDO0lBRUQsZ0JBQWdCO1FBQ2QsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDO0lBQzVCLENBQUM7SUFFRCx1QkFBdUIsQ0FBQyxtQkFBMkI7UUFDakQsT0FBTyxJQUFJLDBCQUEwQixDQUFDO1lBQ3BDLEdBQUcsSUFBSTtZQUNQLGlCQUFpQixFQUNmLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyx1QkFBdUIsQ0FBQyxtQkFBbUIsQ0FBQztTQUN0RSxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQscUJBQXFCLENBQ25CLGlCQUEyQztRQUUzQyxPQUFPLElBQUksMEJBQTBCLENBQUM7WUFDcEMsR0FBRyxJQUFJO1lBQ1AsaUJBQWlCO1NBQ2xCLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxpQkFBaUIsQ0FBQyxhQUE0QjtRQUM1QyxPQUFPLElBQUksMEJBQTBCLENBQUM7WUFDcEMsR0FBRyxJQUFJO1lBQ1AsYUFBYTtTQUNkLENBQUMsQ0FBQztJQUNMLENBQUM7Q0FDRjtBQTlDRCxnRUE4Q0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge01vbWVudG9Mb2dnZXJGYWN0b3J5LCBSZXRyeVN0cmF0ZWd5fSBmcm9tICcuLi8nO1xuaW1wb3J0IHtTdG9yYWdlVHJhbnNwb3J0U3RyYXRlZ3l9IGZyb20gJy4vdHJhbnNwb3J0L3N0b3JhZ2UnO1xuXG4vKipcbiAqIENvbmZpZ3VyYXRpb24gb3B0aW9ucyBmb3IgTW9tZW50byBTdG9yYWdlQ2xpZW50XG4gKlxuICogQGV4cG9ydFxuICogQGludGVyZmFjZSBTdG9yYWdlQ29uZmlndXJhdGlvblxuICovXG5leHBvcnQgaW50ZXJmYWNlIFN0b3JhZ2VDb25maWd1cmF0aW9uIHtcbiAgLyoqXG4gICAqIEByZXR1cm5zIHtNb21lbnRvTG9nZ2VyRmFjdG9yeX0gdGhlIGN1cnJlbnQgY29uZmlndXJhdGlvbiBvcHRpb25zIGZvciBsb2dnaW5nIHZlcmJvc2l0eSBhbmQgZm9ybWF0XG4gICAqL1xuICBnZXRMb2dnZXJGYWN0b3J5KCk6IE1vbWVudG9Mb2dnZXJGYWN0b3J5O1xuXG4gIC8qKlxuICAgKiBAcmV0dXJucyB7U3RvcmFnZVRyYW5zcG9ydFN0cmF0ZWd5fSB0aGUgY3VycmVudCBjb25maWd1cmF0aW9uIG9wdGlvbnMgZm9yIHdpcmUgaW50ZXJhY3Rpb25zIHdpdGggdGhlIE1vbWVudG8gc2VydmljZVxuICAgKi9cbiAgZ2V0VHJhbnNwb3J0U3RyYXRlZ3koKTogU3RvcmFnZVRyYW5zcG9ydFN0cmF0ZWd5O1xuXG4gIC8qKlxuICAgKiBAcmV0dXJucyB7UmV0cnlTdHJhdGVneX0gdGhlIGN1cnJlbnQgY29uZmlndXJhdGlvbiBvcHRpb25zIGZvciBob3cgYW5kIHdoZW4gZmFpbGVkIHJlcXVlc3RzIHdpbGwgYmUgcmV0cmllZFxuICAgKi9cbiAgZ2V0UmV0cnlTdHJhdGVneSgpOiBSZXRyeVN0cmF0ZWd5O1xuXG4gIC8qKlxuICAgKiBDb252ZW5pZW5jZSBjb3B5IGNvbnN0cnVjdG9yIHRoYXQgdXBkYXRlcyB0aGUgY2xpZW50LXNpZGUgdGltZW91dCBzZXR0aW5nIGluIHRoZSBUcmFuc3BvcnRTdHJhdGVneVxuICAgKiBAcGFyYW0ge251bWJlcn0gY2xpZW50VGltZW91dE1pbGxpc1xuICAgKiBAcmV0dXJucyB7U3RvcmFnZUNvbmZpZ3VyYXRpb259IGEgbmV3IENvbmZpZ3VyYXRpb24gb2JqZWN0IHdpdGggaXRzIFRyYW5zcG9ydFN0cmF0ZWd5IHVwZGF0ZWQgdG8gdXNlIHRoZSBzcGVjaWZpZWQgY2xpZW50IHRpbWVvdXRcbiAgICovXG4gIHdpdGhDbGllbnRUaW1lb3V0TWlsbGlzKGNsaWVudFRpbWVvdXRNaWxsaXM6IG51bWJlcik6IFN0b3JhZ2VDb25maWd1cmF0aW9uO1xuXG4gIC8qKlxuICAgKiBDb3B5IGNvbnN0cnVjdG9yIGZvciBvdmVycmlkaW5nIFRyYW5zcG9ydFN0cmF0ZWd5XG4gICAqIEBwYXJhbSB7U3RvcmFnZVRyYW5zcG9ydFN0cmF0ZWd5fSB0cmFuc3BvcnRTdHJhdGVneVxuICAgKiBAcmV0dXJucyB7U3RvcmFnZUNvbmZpZ3VyYXRpb259IGEgbmV3IENvbmZpZ3VyYXRpb24gb2JqZWN0IHdpdGggdGhlIHNwZWNpZmllZCBUcmFuc3BvcnRTdHJhdGVneVxuICAgKi9cbiAgd2l0aFRyYW5zcG9ydFN0cmF0ZWd5KFxuICAgIHRyYW5zcG9ydFN0cmF0ZWd5OiBTdG9yYWdlVHJhbnNwb3J0U3RyYXRlZ3lcbiAgKTogU3RvcmFnZUNvbmZpZ3VyYXRpb247XG5cbiAgLyoqXG4gICAqIENvcHkgY29uc3RydWN0b3IgZm9yIG92ZXJyaWRpbmcgUmV0cnlTdHJhdGVneVxuICAgKiBAcGFyYW0ge1JldHJ5U3RyYXRlZ3l9IHJldHJ5U3RyYXRlZ3lcbiAgICogQHJldHVybnMge1N0b3JhZ2VDb25maWd1cmF0aW9ufSBhIG5ldyBDb25maWd1cmF0aW9uIG9iamVjdCB3aXRoIHRoZSBzcGVjaWZpZWQgUmV0cnlTdHJhdGVneVxuICAgKi9cbiAgd2l0aFJldHJ5U3RyYXRlZ3kocmV0cnlTdHJhdGVneTogUmV0cnlTdHJhdGVneSk6IFN0b3JhZ2VDb25maWd1cmF0aW9uO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFN0b3JhZ2VDb25maWd1cmF0aW9uUHJvcHMge1xuICAvKipcbiAgICogQ29uZmlndXJlcyBsb2dnaW5nIHZlcmJvc2l0eSBhbmQgZm9ybWF0XG4gICAqL1xuICBsb2dnZXJGYWN0b3J5OiBNb21lbnRvTG9nZ2VyRmFjdG9yeTtcbiAgLyoqXG4gICAqIENvbmZpZ3VyZXMgbG93LWxldmVsIG9wdGlvbnMgZm9yIG5ldHdvcmsgaW50ZXJhY3Rpb25zIHdpdGggdGhlIE1vbWVudG8gc2VydmljZVxuICAgKi9cbiAgdHJhbnNwb3J0U3RyYXRlZ3k6IFN0b3JhZ2VUcmFuc3BvcnRTdHJhdGVneTtcbiAgLyoqXG4gICAqIENvbmZpZ3VyZXMgaG93IGFuZCB3aGVuIGZhaWxlZCByZXF1ZXN0cyB3aWxsIGJlIHJldHJpZWRcbiAgICovXG4gIHJldHJ5U3RyYXRlZ3k6IFJldHJ5U3RyYXRlZ3k7XG59XG5cbmV4cG9ydCBjbGFzcyBTdG9yYWdlQ2xpZW50Q29uZmlndXJhdGlvbiBpbXBsZW1lbnRzIFN0b3JhZ2VDb25maWd1cmF0aW9uIHtcbiAgcHJpdmF0ZSByZWFkb25seSBsb2dnZXJGYWN0b3J5OiBNb21lbnRvTG9nZ2VyRmFjdG9yeTtcbiAgcHJpdmF0ZSByZWFkb25seSB0cmFuc3BvcnRTdHJhdGVneTogU3RvcmFnZVRyYW5zcG9ydFN0cmF0ZWd5O1xuICBwcml2YXRlIHJlYWRvbmx5IHJldHJ5U3RyYXRlZ3k6IFJldHJ5U3RyYXRlZ3k7XG5cbiAgY29uc3RydWN0b3IocHJvcHM6IFN0b3JhZ2VDb25maWd1cmF0aW9uUHJvcHMpIHtcbiAgICB0aGlzLmxvZ2dlckZhY3RvcnkgPSBwcm9wcy5sb2dnZXJGYWN0b3J5O1xuICAgIHRoaXMudHJhbnNwb3J0U3RyYXRlZ3kgPSBwcm9wcy50cmFuc3BvcnRTdHJhdGVneTtcbiAgICB0aGlzLnJldHJ5U3RyYXRlZ3kgPSBwcm9wcy5yZXRyeVN0cmF0ZWd5O1xuICB9XG5cbiAgZ2V0TG9nZ2VyRmFjdG9yeSgpOiBNb21lbnRvTG9nZ2VyRmFjdG9yeSB7XG4gICAgcmV0dXJuIHRoaXMubG9nZ2VyRmFjdG9yeTtcbiAgfVxuXG4gIGdldFRyYW5zcG9ydFN0cmF0ZWd5KCk6IFN0b3JhZ2VUcmFuc3BvcnRTdHJhdGVneSB7XG4gICAgcmV0dXJuIHRoaXMudHJhbnNwb3J0U3RyYXRlZ3k7XG4gIH1cblxuICBnZXRSZXRyeVN0cmF0ZWd5KCk6IFJldHJ5U3RyYXRlZ3kge1xuICAgIHJldHVybiB0aGlzLnJldHJ5U3RyYXRlZ3k7XG4gIH1cblxuICB3aXRoQ2xpZW50VGltZW91dE1pbGxpcyhjbGllbnRUaW1lb3V0TWlsbGlzOiBudW1iZXIpOiBTdG9yYWdlQ29uZmlndXJhdGlvbiB7XG4gICAgcmV0dXJuIG5ldyBTdG9yYWdlQ2xpZW50Q29uZmlndXJhdGlvbih7XG4gICAgICAuLi50aGlzLFxuICAgICAgdHJhbnNwb3J0U3RyYXRlZ3k6XG4gICAgICAgIHRoaXMudHJhbnNwb3J0U3RyYXRlZ3kud2l0aENsaWVudFRpbWVvdXRNaWxsaXMoY2xpZW50VGltZW91dE1pbGxpcyksXG4gICAgfSk7XG4gIH1cblxuICB3aXRoVHJhbnNwb3J0U3RyYXRlZ3koXG4gICAgdHJhbnNwb3J0U3RyYXRlZ3k6IFN0b3JhZ2VUcmFuc3BvcnRTdHJhdGVneVxuICApOiBTdG9yYWdlQ29uZmlndXJhdGlvbiB7XG4gICAgcmV0dXJuIG5ldyBTdG9yYWdlQ2xpZW50Q29uZmlndXJhdGlvbih7XG4gICAgICAuLi50aGlzLFxuICAgICAgdHJhbnNwb3J0U3RyYXRlZ3ksXG4gICAgfSk7XG4gIH1cblxuICB3aXRoUmV0cnlTdHJhdGVneShyZXRyeVN0cmF0ZWd5OiBSZXRyeVN0cmF0ZWd5KTogU3RvcmFnZUNvbmZpZ3VyYXRpb24ge1xuICAgIHJldHVybiBuZXcgU3RvcmFnZUNsaWVudENvbmZpZ3VyYXRpb24oe1xuICAgICAgLi4udGhpcyxcbiAgICAgIHJldHJ5U3RyYXRlZ3ksXG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==