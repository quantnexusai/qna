import { StorageDelete, StorageGet, StoragePut } from '@gomomento/sdk-core';
import { IStorageDataClient } from '@gomomento/sdk-core/dist/src/internal/clients';
import { StorageClientAllProps } from './storage-client-all-props';
export declare class StorageDataClient implements IStorageDataClient {
    private readonly configuration;
    private readonly credentialProvider;
    private readonly cacheServiceErrorMapper;
    private readonly logger;
    private readonly requestTimeoutMs;
    private readonly client;
    private readonly interceptors;
    private static readonly DEFAULT_MAX_SESSION_MEMORY_MB;
    /**
     * @param {StorageClientAllProps} props
     */
    constructor(props: StorageClientAllProps);
    close(): void;
    private validateRequestTimeout;
    private validateStoreNameOrThrowError;
    private initializeInterceptors;
    private createMetadata;
    get(storeName: string, key: string): Promise<StorageGet.Response>;
    private sendGet;
    putInt(storeName: string, key: string, value: number): Promise<StoragePut.Response>;
    putDouble(storeName: string, key: string, value: number): Promise<StoragePut.Response>;
    putString(storeName: string, key: string, value: string): Promise<StoragePut.Response>;
    putBytes(storeName: string, key: string, value: Uint8Array): Promise<StoragePut.Response>;
    private sendPut;
    delete(storeName: string, key: string): Promise<StorageDelete.Response>;
    private sendDelete;
}
