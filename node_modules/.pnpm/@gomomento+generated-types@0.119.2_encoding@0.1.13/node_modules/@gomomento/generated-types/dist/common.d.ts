/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: common.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
export declare namespace common {
    class Present extends pb_1.Message {
        #private;
        constructor(data?: any[] | {});
        static fromObject(data: {}): Present;
        toObject(): {};
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Present;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): Present;
    }
    class PresentAndNotEqual extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            value_to_check?: Uint8Array;
        });
        get value_to_check(): Uint8Array;
        set value_to_check(value: Uint8Array);
        static fromObject(data: {
            value_to_check?: Uint8Array;
        }): PresentAndNotEqual;
        toObject(): {
            value_to_check?: Uint8Array;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): PresentAndNotEqual;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): PresentAndNotEqual;
    }
    class Absent extends pb_1.Message {
        #private;
        constructor(data?: any[] | {});
        static fromObject(data: {}): Absent;
        toObject(): {};
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Absent;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): Absent;
    }
    class Equal extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            value_to_check?: Uint8Array;
        });
        get value_to_check(): Uint8Array;
        set value_to_check(value: Uint8Array);
        static fromObject(data: {
            value_to_check?: Uint8Array;
        }): Equal;
        toObject(): {
            value_to_check?: Uint8Array;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Equal;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): Equal;
    }
    class AbsentOrEqual extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            value_to_check?: Uint8Array;
        });
        get value_to_check(): Uint8Array;
        set value_to_check(value: Uint8Array);
        static fromObject(data: {
            value_to_check?: Uint8Array;
        }): AbsentOrEqual;
        toObject(): {
            value_to_check?: Uint8Array;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): AbsentOrEqual;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): AbsentOrEqual;
    }
    class NotEqual extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            value_to_check?: Uint8Array;
        });
        get value_to_check(): Uint8Array;
        set value_to_check(value: Uint8Array);
        static fromObject(data: {
            value_to_check?: Uint8Array;
        }): NotEqual;
        toObject(): {
            value_to_check?: Uint8Array;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): NotEqual;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): NotEqual;
    }
    class _Unbounded extends pb_1.Message {
        #private;
        constructor(data?: any[] | {});
        static fromObject(data: {}): _Unbounded;
        toObject(): {};
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Unbounded;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _Unbounded;
    }
    class _Empty extends pb_1.Message {
        #private;
        constructor(data?: any[] | {});
        static fromObject(data: {}): _Empty;
        toObject(): {};
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Empty;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _Empty;
    }
}
