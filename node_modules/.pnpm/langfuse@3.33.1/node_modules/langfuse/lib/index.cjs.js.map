{"version":3,"file":"index.cjs.js","sources":["../src/storage.ts","../src/langfuse.ts","../src/openai/LangfuseSingleton.ts","../src/openai/parseOpenAI.ts","../src/openai/utils.ts","../src/openai/traceMethod.ts","../src/openai/observeOpenAI.ts"],"sourcesContent":["import { type LangfuseOptions } from \"./types\";\n\nexport type LangfuseStorage = {\n  getItem: (key: string) => string | null | undefined;\n  setItem: (key: string, value: string) => void;\n  removeItem: (key: string) => void;\n  clear: () => void;\n  getAllKeys: () => readonly string[];\n};\n\n// Methods partially borrowed from quirksmode.org/js/cookies.html\nexport const cookieStore: LangfuseStorage = {\n  getItem(key) {\n    try {\n      const nameEQ = key + \"=\";\n      const ca = document.cookie.split(\";\");\n      for (let i = 0; i < ca.length; i++) {\n        let c = ca[i];\n        while (c.charAt(0) == \" \") {\n          c = c.substring(1, c.length);\n        }\n        if (c.indexOf(nameEQ) === 0) {\n          return decodeURIComponent(c.substring(nameEQ.length, c.length));\n        }\n      }\n    } catch (err) {}\n    return null;\n  },\n\n  setItem(key: string, value: string) {\n    try {\n      const cdomain = \"\",\n        expires = \"\",\n        secure = \"\";\n\n      const new_cookie_val = key + \"=\" + encodeURIComponent(value) + expires + \"; path=/\" + cdomain + secure;\n      document.cookie = new_cookie_val;\n    } catch (err) {\n      return;\n    }\n  },\n\n  removeItem(name) {\n    try {\n      cookieStore.setItem(name, \"\");\n    } catch (err) {\n      return;\n    }\n  },\n  clear() {\n    document.cookie = \"\";\n  },\n  getAllKeys() {\n    const ca = document.cookie.split(\";\");\n    const keys = [];\n\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) == \" \") {\n        c = c.substring(1, c.length);\n      }\n      keys.push(c.split(\"=\")[0]);\n    }\n\n    return keys;\n  },\n};\n\nconst createStorageLike = (store: any): LangfuseStorage => {\n  return {\n    getItem(key) {\n      return store.getItem(key);\n    },\n\n    setItem(key, value) {\n      store.setItem(key, value);\n    },\n\n    removeItem(key) {\n      store.removeItem(key);\n    },\n    clear() {\n      store.clear();\n    },\n    getAllKeys() {\n      const keys = [];\n      for (const key in localStorage) {\n        keys.push(key);\n      }\n      return keys;\n    },\n  };\n};\n\nconst checkStoreIsSupported = (storage: LangfuseStorage, key = \"__mplssupport__\"): boolean => {\n  if (!window) {\n    return false;\n  }\n  try {\n    const val = \"xyz\";\n    storage.setItem(key, val);\n    if (storage.getItem(key) !== val) {\n      return false;\n    }\n    storage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n};\n\nlet localStore: LangfuseStorage | undefined = undefined;\nlet sessionStore: LangfuseStorage | undefined = undefined;\n\nconst createMemoryStorage = (): LangfuseStorage => {\n  const _cache: { [key: string]: any | undefined } = {};\n\n  const store: LangfuseStorage = {\n    getItem(key) {\n      return _cache[key];\n    },\n\n    setItem(key, value) {\n      _cache[key] = value !== null ? value : undefined;\n    },\n\n    removeItem(key) {\n      delete _cache[key];\n    },\n    clear() {\n      for (const key in _cache) {\n        delete _cache[key];\n      }\n    },\n    getAllKeys() {\n      const keys = [];\n      for (const key in _cache) {\n        keys.push(key);\n      }\n      return keys;\n    },\n  };\n  return store;\n};\n\nexport const getStorage = (type: LangfuseOptions[\"persistence\"], window: Window | undefined): LangfuseStorage => {\n  if (typeof window !== undefined && window) {\n    if (!localStorage) {\n      const _localStore = createStorageLike(window.localStorage);\n      localStore = checkStoreIsSupported(_localStore) ? _localStore : undefined;\n    }\n\n    if (!sessionStore) {\n      const _sessionStore = createStorageLike(window.sessionStorage);\n      sessionStore = checkStoreIsSupported(_sessionStore) ? _sessionStore : undefined;\n    }\n  }\n\n  switch (type) {\n    case \"cookie\":\n      return cookieStore || localStore || sessionStore || createMemoryStorage();\n    case \"localStorage\":\n      return localStore || sessionStore || createMemoryStorage();\n    case \"sessionStorage\":\n      return sessionStore || createMemoryStorage();\n    case \"memory\":\n      return createMemoryStorage();\n    default:\n      return createMemoryStorage();\n  }\n};\n","import {\n  LangfuseCore,\n  LangfuseWebStateless,\n  type LangfuseFetchOptions,\n  type LangfuseFetchResponse,\n  type LangfusePersistedProperty,\n  utils,\n} from \"langfuse-core\";\nimport { type LangfuseStorage, getStorage } from \"./storage\";\nimport { version } from \"../package.json\";\nimport { type LangfuseOptions } from \"./types\";\n\nexport type { LangfusePromptClient, ChatPromptClient, TextPromptClient, LangfusePromptRecord } from \"langfuse-core\";\n\n// Required when users pass these as typed arguments\nexport {\n  type LangfuseTraceClient,\n  type LangfuseSpanClient,\n  type LangfuseEventClient,\n  type LangfuseGenerationClient,\n  LangfuseMedia,\n} from \"langfuse-core\";\n\nexport class Langfuse extends LangfuseCore {\n  private _storage: LangfuseStorage;\n  private _storageCache: any;\n  private _storageKey: string;\n\n  constructor(params?: { publicKey?: string; secretKey?: string } & LangfuseOptions) {\n    const langfuseConfig = utils.configLangfuseSDK(params);\n    super(langfuseConfig);\n\n    if (typeof window !== \"undefined\" && \"Deno\" in window === false) {\n      this._storageKey = params?.persistence_name\n        ? `lf_${params.persistence_name}`\n        : `lf_${langfuseConfig.publicKey}_langfuse`;\n      this._storage = getStorage(params?.persistence || \"localStorage\", window);\n    } else {\n      this._storageKey = `lf_${langfuseConfig.publicKey}_langfuse`;\n      this._storage = getStorage(\"memory\", undefined);\n    }\n  }\n\n  getPersistedProperty<T>(key: LangfusePersistedProperty): T | undefined {\n    if (!this._storageCache) {\n      this._storageCache = JSON.parse(this._storage.getItem(this._storageKey) || \"{}\") || {};\n    }\n\n    return this._storageCache[key];\n  }\n\n  setPersistedProperty<T>(key: LangfusePersistedProperty, value: T | null): void {\n    if (!this._storageCache) {\n      this._storageCache = JSON.parse(this._storage.getItem(this._storageKey) || \"{}\") || {};\n    }\n\n    if (value === null) {\n      delete this._storageCache[key];\n    } else {\n      this._storageCache[key] = value;\n    }\n\n    this._storage.setItem(this._storageKey, JSON.stringify(this._storageCache));\n  }\n\n  fetch(url: string, options: LangfuseFetchOptions): Promise<LangfuseFetchResponse> {\n    return fetch(url, options);\n  }\n\n  getLibraryId(): string {\n    return \"langfuse\";\n  }\n\n  getLibraryVersion(): string {\n    return version;\n  }\n\n  getCustomUserAgent(): void {\n    return;\n  }\n}\n\nexport class LangfuseWeb extends LangfuseWebStateless {\n  private _storage: LangfuseStorage;\n  private _storageCache: any;\n  private _storageKey: string;\n\n  constructor(params?: Omit<LangfuseOptions, \"secretKey\">) {\n    const langfuseConfig = utils.configLangfuseSDK(params, false);\n    super(langfuseConfig);\n\n    if (typeof window !== \"undefined\") {\n      this._storageKey = params?.persistence_name\n        ? `lf_${params.persistence_name}`\n        : `lf_${langfuseConfig.publicKey}_langfuse`;\n      this._storage = getStorage(params?.persistence || \"localStorage\", window);\n    } else {\n      this._storageKey = `lf_${langfuseConfig.publicKey}_langfuse`;\n      this._storage = getStorage(\"memory\", undefined);\n    }\n  }\n\n  getPersistedProperty<T>(key: LangfusePersistedProperty): T | undefined {\n    if (!this._storageCache) {\n      this._storageCache = JSON.parse(this._storage.getItem(this._storageKey) || \"{}\") || {};\n    }\n\n    return this._storageCache[key];\n  }\n\n  setPersistedProperty<T>(key: LangfusePersistedProperty, value: T | null): void {\n    if (!this._storageCache) {\n      this._storageCache = JSON.parse(this._storage.getItem(this._storageKey) || \"{}\") || {};\n    }\n\n    if (value === null) {\n      delete this._storageCache[key];\n    } else {\n      this._storageCache[key] = value;\n    }\n\n    this._storage.setItem(this._storageKey, JSON.stringify(this._storageCache));\n  }\n\n  fetch(url: string, options: LangfuseFetchOptions): Promise<LangfuseFetchResponse> {\n    return fetch(url, options);\n  }\n\n  getLibraryId(): string {\n    return \"langfuse-frontend\";\n  }\n\n  getLibraryVersion(): string {\n    return version;\n  }\n\n  getCustomUserAgent(): void {\n    return;\n  }\n}\n","import { Langfuse } from \"../langfuse\";\nimport type { LangfuseInitParams } from \"./types\";\n\n/**\n * Represents a singleton instance of the Langfuse client.\n */\nexport class LangfuseSingleton {\n  private static instance: Langfuse | null = null; // Lazy initialization\n\n  /**\n   * Returns the singleton instance of the Langfuse client.\n   * @param params Optional parameters for initializing the Langfuse instance. Only used for the first call.\n   * @returns The singleton instance of the Langfuse client.\n   */\n  public static getInstance(params?: LangfuseInitParams): Langfuse {\n    if (!LangfuseSingleton.instance) {\n      LangfuseSingleton.instance = new Langfuse(params);\n    }\n    return LangfuseSingleton.instance;\n  }\n}\n","import type OpenAI from \"openai\";\nimport type { Usage, UsageDetails } from \"langfuse-core\";\n\ntype ParsedOpenAIArguments = {\n  model: string;\n  input: Record<string, any> | string;\n  modelParameters: Record<string, any>;\n};\n\nexport const parseInputArgs = (args: Record<string, any>): ParsedOpenAIArguments => {\n  let params: Record<string, any> = {};\n  params = {\n    frequency_penalty: args.frequency_penalty,\n    logit_bias: args.logit_bias,\n    logprobs: args.logprobs,\n    max_tokens: args.max_tokens,\n    n: args.n,\n    presence_penalty: args.presence_penalty,\n    seed: args.seed,\n    stop: args.stop,\n    stream: args.stream,\n    temperature: args.temperature,\n    top_p: args.top_p,\n    user: args.user,\n    response_format: args.response_format,\n    top_logprobs: args.top_logprobs,\n  };\n\n  let input: Record<string, any> | string;\n  if (args && typeof args === \"object\" && !Array.isArray(args) && \"messages\" in args) {\n    input = {};\n    input.messages = args.messages;\n    if (\"function_call\" in args) {\n      input.function_call = args.function_call;\n    }\n    if (\"functions\" in args) {\n      input.functions = args.functions;\n    }\n    if (\"tools\" in args) {\n      input.tools = args.tools;\n    }\n\n    if (\"tool_choice\" in args) {\n      input.tool_choice = args.tool_choice;\n    }\n  } else {\n    input = args.prompt;\n  }\n\n  return {\n    model: args.model,\n    input: input,\n    modelParameters: params,\n  };\n};\n\nexport const parseCompletionOutput = (res: unknown): string => {\n  if (!(res instanceof Object && \"choices\" in res && Array.isArray(res.choices))) {\n    return \"\";\n  }\n\n  return \"message\" in res.choices[0] ? res.choices[0].message : res.choices[0].text ?? \"\";\n};\n\nexport const parseUsage = (res: unknown): Usage | undefined => {\n  if (hasCompletionUsage(res)) {\n    const { prompt_tokens, completion_tokens, total_tokens } = res.usage;\n\n    return {\n      input: prompt_tokens,\n      output: completion_tokens,\n      total: total_tokens,\n    };\n  }\n};\n\nexport const parseUsageDetails = (completionUsage: OpenAI.CompletionUsage): UsageDetails | undefined => {\n  const { prompt_tokens, completion_tokens, total_tokens, completion_tokens_details, prompt_tokens_details } =\n    completionUsage;\n\n  return {\n    input: prompt_tokens,\n    output: completion_tokens,\n    total: total_tokens,\n    ...Object.fromEntries(\n      Object.entries(prompt_tokens_details ?? {}).map(([key, value]) => [`input_${key}`, value as number])\n    ),\n    ...Object.fromEntries(\n      Object.entries(completion_tokens_details ?? {}).map(([key, value]) => [`output_${key}`, value as number])\n    ),\n  };\n};\n\nexport const parseUsageDetailsFromResponse = (res: unknown): UsageDetails | undefined => {\n  if (hasCompletionUsage(res)) {\n    return parseUsageDetails(res.usage);\n  }\n};\n\nexport const parseChunk = (\n  rawChunk: unknown\n):\n  | { isToolCall: false; data: string }\n  | { isToolCall: true; data: OpenAI.Chat.Completions.ChatCompletionChunk.Choice.Delta.ToolCall } => {\n  let isToolCall = false;\n  const _chunk = rawChunk as OpenAI.ChatCompletionChunk | OpenAI.Completions.Completion;\n  const chunkData = _chunk?.choices?.[0];\n\n  try {\n    if (\"delta\" in chunkData && \"tool_calls\" in chunkData.delta && Array.isArray(chunkData.delta.tool_calls)) {\n      isToolCall = true;\n\n      return { isToolCall, data: chunkData.delta.tool_calls[0] };\n    }\n    if (\"delta\" in chunkData) {\n      return { isToolCall, data: chunkData.delta?.content || \"\" };\n    }\n\n    if (\"text\" in chunkData) {\n      return { isToolCall, data: chunkData.text || \"\" };\n    }\n  } catch (e) {}\n\n  return { isToolCall: false, data: \"\" };\n};\n\n// Type guard to check if an unknown object is a UsageResponse\nfunction hasCompletionUsage(obj: any): obj is { usage: OpenAI.CompletionUsage } {\n  return (\n    obj instanceof Object &&\n    \"usage\" in obj &&\n    obj.usage instanceof Object &&\n    typeof obj.usage.prompt_tokens === \"number\" &&\n    typeof obj.usage.completion_tokens === \"number\" &&\n    typeof obj.usage.total_tokens === \"number\"\n  );\n}\n\nexport const getToolCallOutput = (\n  toolCallChunks: OpenAI.Chat.Completions.ChatCompletionChunk.Choice.Delta.ToolCall[]\n): {\n  tool_calls: {\n    function: {\n      name: string;\n      arguments: string;\n    };\n  }[];\n} => {\n  let name = \"\";\n  let toolArguments = \"\";\n\n  for (const toolCall of toolCallChunks) {\n    name = toolCall.function?.name || name;\n    toolArguments += toolCall.function?.arguments || \"\";\n  }\n\n  return {\n    tool_calls: [\n      {\n        function: {\n          name,\n          arguments: toolArguments,\n        },\n      },\n    ],\n  };\n};\n","export const isAsyncIterable = (x: unknown): x is AsyncIterable<unknown> =>\n  x != null && typeof x === \"object\" && typeof (x as any)[Symbol.asyncIterator] === \"function\";\n","import type OpenAI from \"openai\";\nimport type { LangfuseParent } from \"./types\";\n\nimport { LangfuseSingleton } from \"./LangfuseSingleton\";\nimport {\n  getToolCallOutput,\n  parseChunk,\n  parseCompletionOutput,\n  parseInputArgs,\n  parseUsage,\n  parseUsageDetails,\n  parseUsageDetailsFromResponse,\n} from \"./parseOpenAI\";\nimport { isAsyncIterable } from \"./utils\";\nimport type { LangfuseConfig } from \"./types\";\n\ntype GenericMethod = (...args: unknown[]) => unknown;\n\nexport const withTracing = <T extends GenericMethod>(\n  tracedMethod: T,\n  config?: LangfuseConfig & Required<{ generationName: string }>\n): ((...args: Parameters<T>) => Promise<ReturnType<T>>) => {\n  return (...args) => wrapMethod(tracedMethod, config, ...args);\n};\n\nconst wrapMethod = async <T extends GenericMethod>(\n  tracedMethod: T,\n  config?: LangfuseConfig,\n  ...args: Parameters<T>\n): Promise<ReturnType<T> | any> => {\n  const { model, input, modelParameters } = parseInputArgs(args[0] ?? {});\n\n  const finalModelParams = { ...modelParameters, response_format: undefined };\n  const finalMetadata = {\n    ...config?.metadata,\n    response_format: \"response_format\" in modelParameters ? modelParameters.response_format : undefined,\n  };\n\n  let observationData = {\n    model,\n    input,\n    modelParameters: finalModelParams,\n    name: config?.generationName,\n    startTime: new Date(),\n    promptName: config?.langfusePrompt?.name,\n    promptVersion: config?.langfusePrompt?.version,\n    metadata: finalMetadata,\n  };\n\n  let langfuseParent: LangfuseParent;\n  const hasUserProvidedParent = config && \"parent\" in config;\n\n  if (hasUserProvidedParent) {\n    langfuseParent = config.parent;\n\n    // Remove the parent from the config to avoid circular references in the generation body\n    const filteredConfig = { ...config, parent: undefined };\n\n    observationData = {\n      ...filteredConfig,\n      ...observationData,\n      promptName: config?.promptName ?? config?.langfusePrompt?.name, // Maintain backward compatibility for users who use promptName\n      promptVersion: config?.promptVersion ?? config?.langfusePrompt?.version, // Maintain backward compatibility for users who use promptVersion\n    };\n  } else {\n    const langfuse = LangfuseSingleton.getInstance(config?.clientInitParams);\n    langfuseParent = langfuse.trace({\n      ...config,\n      ...observationData,\n      id: config?.traceId,\n      name: config?.traceName,\n      timestamp: observationData.startTime,\n    });\n  }\n\n  try {\n    const res = await tracedMethod(...args);\n\n    // Handle stream responses\n    if (isAsyncIterable(res)) {\n      async function* tracedOutputGenerator(): AsyncGenerator<unknown, void, unknown> {\n        const response = res;\n        const textChunks: string[] = [];\n        const toolCallChunks: OpenAI.Chat.Completions.ChatCompletionChunk.Choice.Delta.ToolCall[] = [];\n        let completionStartTime: Date | null = null;\n        let usage: OpenAI.CompletionUsage | null = null;\n\n        for await (const rawChunk of response as AsyncIterable<unknown>) {\n          completionStartTime = completionStartTime ?? new Date();\n\n          if (typeof rawChunk === \"object\" && rawChunk != null && \"usage\" in rawChunk) {\n            usage = rawChunk.usage as OpenAI.CompletionUsage | null;\n          }\n\n          const processedChunk = parseChunk(rawChunk);\n\n          if (!processedChunk.isToolCall) {\n            textChunks.push(processedChunk.data);\n          } else {\n            toolCallChunks.push(processedChunk.data);\n          }\n\n          yield rawChunk;\n        }\n\n        const output = toolCallChunks.length > 0 ? getToolCallOutput(toolCallChunks) : textChunks.join(\"\");\n\n        langfuseParent.generation({\n          ...observationData,\n          output,\n          endTime: new Date(),\n          completionStartTime,\n          usage: usage\n            ? {\n                input: \"prompt_tokens\" in usage ? usage.prompt_tokens : undefined,\n                output: \"completion_tokens\" in usage ? usage.completion_tokens : undefined,\n                total: \"total_tokens\" in usage ? usage.total_tokens : undefined,\n              }\n            : undefined,\n          usageDetails: usage ? parseUsageDetails(usage) : undefined,\n        });\n\n        if (!hasUserProvidedParent) {\n          langfuseParent.update({ output });\n        }\n      }\n\n      return tracedOutputGenerator() as ReturnType<T>;\n    }\n\n    const output = parseCompletionOutput(res);\n    const usage = parseUsage(res);\n    const usageDetails = parseUsageDetailsFromResponse(res);\n\n    langfuseParent.generation({\n      ...observationData,\n      output,\n      endTime: new Date(),\n      usage,\n      usageDetails,\n    });\n\n    if (!hasUserProvidedParent) {\n      langfuseParent.update({ output });\n    }\n\n    return res;\n  } catch (error) {\n    langfuseParent.generation({\n      ...observationData,\n      endTime: new Date(),\n      statusMessage: String(error),\n      level: \"ERROR\",\n      usage: {\n        inputCost: 0,\n        outputCost: 0,\n        totalCost: 0,\n      },\n      costDetails: {\n        input: 0,\n        output: 0,\n        total: 0,\n      },\n    });\n\n    throw error;\n  }\n};\n","import type { LangfuseCore } from \"langfuse-core\";\n\nimport { LangfuseSingleton } from \"./LangfuseSingleton\";\nimport { withTracing } from \"./traceMethod\";\nimport type { LangfuseConfig, LangfuseExtension } from \"./types\";\n\n/**\n * Wraps an OpenAI SDK object with Langfuse tracing. Function calls are extended with a tracer that logs detailed information about the call, including the method name,\n * input parameters, and output.\n * \n * @param {T} sdk - The OpenAI SDK object to be wrapped.\n * @param {LangfuseConfig} [langfuseConfig] - Optional configuration object for the wrapper.\n * @param {string} [langfuseConfig.traceName] - The name to use for tracing. If not provided, a default name based on the SDK's constructor name and the method name will be used.\n * @param {string} [langfuseConfig.sessionId] - Optional session ID for tracing.\n * @param {string} [langfuseConfig.userId] - Optional user ID for tracing.\n * @param {string} [langfuseConfig.release] - Optional release version for tracing.\n * @param {string} [langfuseConfig.version] - Optional version for tracing.\n * @param {string} [langfuseConfig.metadata] - Optional metadata for tracing.\n * @param {string} [langfuseConfig.tags] - Optional tags for tracing.\n * @returns {T} - A proxy of the original SDK object with methods wrapped for tracing.\n *\n * @example\n * const client = new OpenAI();\n * const res = observeOpenAI(client, { traceName: \"My.OpenAI.Chat.Trace\" }).chat.completions.create({\n *      messages: [{ role: \"system\", content: \"Say this is a test!\" }],\n        model: \"gpt-3.5-turbo\",\n        user: \"langfuse\",\n        max_tokens: 300\n * });\n * */\nexport const observeOpenAI = <SDKType extends object>(\n  sdk: SDKType,\n  langfuseConfig?: LangfuseConfig\n): SDKType & LangfuseExtension => {\n  return new Proxy(sdk, {\n    get(wrappedSdk, propKey, proxy) {\n      const originalProperty = wrappedSdk[propKey as keyof SDKType];\n\n      const defaultGenerationName = `${sdk.constructor?.name}.${propKey.toString()}`;\n      const generationName = langfuseConfig?.generationName ?? defaultGenerationName;\n      const traceName = langfuseConfig && \"traceName\" in langfuseConfig ? langfuseConfig.traceName : generationName;\n      const config = { ...langfuseConfig, generationName, traceName };\n\n      // Add a flushAsync method to the OpenAI SDK that flushes the Langfuse client\n      if (propKey === \"flushAsync\") {\n        let langfuseClient: LangfuseCore;\n\n        // Flush the correct client depending on whether a parent client is provided\n        if (langfuseConfig && \"parent\" in langfuseConfig) {\n          langfuseClient = langfuseConfig.parent.client;\n        } else {\n          langfuseClient = LangfuseSingleton.getInstance();\n        }\n\n        return langfuseClient.flushAsync.bind(langfuseClient);\n      }\n\n      // Add a shutdownAsync method to the OpenAI SDK that flushes the Langfuse client\n      if (propKey === \"shutdownAsync\") {\n        let langfuseClient: LangfuseCore;\n\n        // Flush the correct client depending on whether a parent client is provided\n        if (langfuseConfig && \"parent\" in langfuseConfig) {\n          langfuseClient = langfuseConfig.parent.client;\n        } else {\n          langfuseClient = LangfuseSingleton.getInstance();\n        }\n\n        return langfuseClient.shutdownAsync.bind(langfuseClient);\n      }\n\n      // Trace methods of the OpenAI SDK\n      if (typeof originalProperty === \"function\") {\n        return withTracing(originalProperty.bind(wrappedSdk), config);\n      }\n\n      const isNestedOpenAIObject =\n        originalProperty &&\n        !Array.isArray(originalProperty) &&\n        !(originalProperty instanceof Date) &&\n        typeof originalProperty === \"object\";\n\n      // Recursively wrap nested objects to ensure all nested properties or methods are also traced\n      if (isNestedOpenAIObject) {\n        return observeOpenAI(originalProperty, config);\n      }\n\n      // Fallback to returning the original value\n      return Reflect.get(wrappedSdk, propKey, proxy);\n    },\n  }) as SDKType & LangfuseExtension;\n};\n"],"names":["cookieStore","getItem","key","nameEQ","ca","document","cookie","split","i","length","c","charAt","substring","indexOf","decodeURIComponent","err","setItem","value","cdomain","expires","secure","new_cookie_val","encodeURIComponent","removeItem","name","clear","getAllKeys","keys","push","createStorageLike","store","localStorage","checkStoreIsSupported","storage","window","val","localStore","undefined","sessionStore","createMemoryStorage","_cache","getStorage","type","_localStore","_sessionStore","sessionStorage","Langfuse","LangfuseCore","constructor","params","langfuseConfig","utils","configLangfuseSDK","_storageKey","persistence_name","publicKey","_storage","persistence","getPersistedProperty","_storageCache","JSON","parse","setPersistedProperty","stringify","fetch","url","options","getLibraryId","getLibraryVersion","version","getCustomUserAgent","LangfuseWeb","LangfuseWebStateless","LangfuseSingleton","getInstance","instance","parseInputArgs","args","frequency_penalty","logit_bias","logprobs","max_tokens","n","presence_penalty","seed","stop","stream","temperature","top_p","user","response_format","top_logprobs","input","Array","isArray","messages","function_call","functions","tools","tool_choice","prompt","model","modelParameters","parseCompletionOutput","res","Object","choices","message","text","parseUsage","hasCompletionUsage","prompt_tokens","completion_tokens","total_tokens","usage","output","total","parseUsageDetails","completionUsage","completion_tokens_details","prompt_tokens_details","fromEntries","entries","map","parseUsageDetailsFromResponse","parseChunk","rawChunk","isToolCall","_chunk","chunkData","delta","tool_calls","data","content","e","obj","getToolCallOutput","toolCallChunks","toolArguments","toolCall","function","arguments","isAsyncIterable","x","Symbol","asyncIterator","withTracing","tracedMethod","config","wrapMethod","finalModelParams","finalMetadata","metadata","observationData","generationName","startTime","Date","promptName","langfusePrompt","promptVersion","langfuseParent","hasUserProvidedParent","parent","filteredConfig","langfuse","clientInitParams","trace","id","traceId","traceName","timestamp","tracedOutputGenerator","response","textChunks","completionStartTime","processedChunk","join","generation","endTime","usageDetails","update","error","statusMessage","String","level","inputCost","outputCost","totalCost","costDetails","observeOpenAI","sdk","Proxy","get","wrappedSdk","propKey","proxy","originalProperty","defaultGenerationName","toString","langfuseClient","client","flushAsync","bind","shutdownAsync","isNestedOpenAIObject","Reflect"],"mappings":"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"}