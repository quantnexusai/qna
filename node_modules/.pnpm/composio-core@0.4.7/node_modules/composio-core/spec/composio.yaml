openapi: 3.1.0
info:
  version: 1.0.0
  title: Composio API Collection
  summary: ''
  description: Composio API OpenAPI Spec.
  contact:
    name: soham
    url: composio.dev
    email: hello@composio.dev
  license:
    url: 'https://composio.dev/terms-of-service'
    name: Proprietary
servers:
  - url: 'https://backend.composio.dev/api'
    description: baseurl
paths:
  /v1/apps:
    get:
      tags:
        - apps
      summary: List All Apps
      description: |-
        Retrieves a list of all available apps in the Composio platform.

        This endpoint allows clients to explore and discover the supported apps. It returns an array of app objects, each containing essential details such as the app's key, name, description, logo, categories, and unique identifier.

        Use this endpoint to build a catalog of available apps and provide your users with an overview of the apps they can integrate with.
      operationId: list-all-apps
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    description: An array of app objects.
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                          description: A unique identifier for the app.
                        name:
                          type: string
                          description: The name of the app.
                        description:
                          type: string
                          description: A brief description of the app's functionality.
                        logo:
                          type: string
                          description: The URL of the app's logo image.
                        categories:
                          type: array
                          description: An array of categories the app belongs to.
                          items:
                            type: string
                        appId:
                          type: string
                          description: The unique ID of the app.
              examples:
                List All Apps:
                  value:
                    items:
                      - key: asana
                        name: Asana
                        description: 'Tool to help teams organize, track, and manage their work.'
                        logo: 'https://assets.asana.biz/m/7342a96f034ee491/original/trademark-logo-lockup-horizontal.png'
                        categories:
                          - productivity
                          - ticketing
                        appId: 36a0705d-7e93-42ba-9288-436ee6201d7c
                      - key: calendly
                        name: Calendly
                        description: 'A business communication platform used for teams to schedule, prepare and follow up on external meetings.'
                        logo: 'https://upload.wikimedia.org/wikipedia/en/thumb/7/7f/Calendly_company_logo.png/330px-Calendly_company_logo.png'
                        categories:
                          - productivity
                        appId: fb9b4a59-8eda-4032-84d7-638e1df4ffef
      security:
        - authToken: []
      servers:
        - url: 'https://backend.composio.dev/api'
          description: baseurl
  /v1/connectedAccounts:
    get:
      tags:
        - connectedAccounts
      summary: List All Connected Accounts
      description: |-
        Retrieves a list of all connected accounts in the Composio platform. 

        It supports pagination and filtering based on various parameters such as app ID, integration ID, and connected  ID. The response includes an array of connection objects, each containing details like the connector ID, connection parameters, status, creation/update timestamps, and associated app information.

        Use this endpoint to manage and monitor all active connections.  
      operationId: list-all-connections
      parameters:
        - name: page
          in: query
          description: Page number to fetch
          schema:
            type: integer
            examples:
              - 1
          examples:
            default:
              value: 1
        - name: pageSize
          in: query
          description: Page size to assume
          schema:
            type: integer
            examples:
              - 10
          examples:
            default:
              value: 10
        - name: integrationId
          in: query
          description: Filter by using specific Integration
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        connectorId:
                          type: string
                          description: The unique identifier of the connector associated with the connection.
                        connectionParams:
                          type: object
                          description: An object containing the parameters specific to the connection.
                          properties:
                            base_url:
                              type: string
                              description: The base URL for making API requests to the connected app.
                            client_id:
                              type: string
                              description: The client ID used for authentication with the connected app.
                            client_secret:
                              type: string
                              description: The client secret used for authentication with the connected app.
                            owner:
                              description: 'The owner of the connection, which can be an object or a string.'
                              oneOf:
                                - type: object
                                  properties:
                                    type:
                                      type: string
                                      description: 'The type of the owner (e.g., "user").'
                                    user:
                                      type: object
                                      description: An object representing the user owner of the connection.
                                      properties:
                                        id:
                                          type: string
                                        name:
                                          type: string
                                        type:
                                          type: string
                                        object:
                                          type: string
                                          description: 'The object type of the user (e.g., "user").'
                                        person:
                                          type: object
                                          properties:
                                            email:
                                              type: string
                                        avatar_url:
                                          type: string
                                - type: string
                            bot_id:
                              type: string
                              description: The ID of the bot associated with the connection.
                            request_id:
                              type: string
                              description: The ID of the request associated with the connection.
                            token_type:
                              type: string
                              description: 'The type of token used for authentication (e.g., "bearer").'
                            access_token:
                              type: string
                              description: The access token used for authentication with the connected app.
                            workspace_id:
                              type: string
                              description: The ID of the workspace associated with the connection.
                            workspace_icon:
                              type: string
                              description: The URL of the workspace icon.
                            workspace_name:
                              type: string
                              description: The name of the workspace.
                            duplicated_template_id:
                              type: string
                              description: The ID of the duplicated template associated with the connection.
                            scope:
                              type: string
                              description: The scope of permissions granted to the connection
                            created_at:
                              type: integer
                              description: The timestamp indicating when the connection was created.
                            expires_in:
                              type: integer
                              description: |
                                The expiration time (in seconds) of the access token.
                            organization:
                              type: string
                              description: The organization associated with the connection.
                            refresh_token:
                              type: string
                              description: The refresh token used to obtain a new access token when it expires.
                        id:
                          type: string
                          description: The unique identifier of the connection.
                        status:
                          type: string
                          enum:
                            - FAILED
                            - INITIATED
                            - ACTIVE
                          description: 'The status of the connection (e.g., "INITIATED", "SUCCESS").'
                        createdAt:
                          type: string
                          description: The timestamp indicating when the connection was created.
                        updatedAt:
                          type: string
                          description: The timestamp indicating when the connection was last updated.
                        appName:
                          type: string
                          description: The name of the app associated with the connection.
                        logo:
                          type: string
                          description: The URL of the logo of the app associated with the connection.
                  totalPages:
                    type: integer
                  page:
                    type: integer
              examples:
                Get List of connections:
                  value:
                    items:
                      - connectorId: c9da705a-774c-46e8-9b55-cc0eb0d85508
                        connectionParams:
                          base_url: 'https://api.github.com'
                          client_id: 37beeaa7
                          client_secret: 8c6d25f889a4e74
                        id: 57fa7084-1188-4cbc-ae3b-e26c5bcccb7b
                        status: INITIATED
                        createdAt: '2024-03-11T07:41:34.827Z'
                        updatedAt: '2024-03-11T07:41:34.827Z'
                        appName: Github
                        logo: 'https://github.githubassets.com/assets/GitHub-Mark-ea2971cee799.png'
                      - connectorId: 31a23bf7-8df4-4e76-9860-
                        connectionParams:
                          owner:
                            type: user
                            user:
                              id: 99b093ad-f0ff-42ef-be49-5c86a9ca9f52
                              name: Utkarsh
                              type: person
                              object: user
                              person:
                                email: utkarsh@composio.dev
                              avatar_url: s
                          bot_id: 95e803ea-6677-4fd5-a881-9216e0ba8299
                          base_url: 'https://api.notion.app'
                          client_id: 85b2ddba
                          request_id: a2b510af-acaf-4194-b1ff-ca0403d939e1
                          token_type: bearer
                          access_token: secret_H3AAr9E8rR8tA
                          workspace_id: 35adec70-dbef-4f42-9
                          client_secret: secret_K05OAKiG3MMe
                          workspace_icon: 'null'
                          workspace_name: Composio
                          duplicated_template_id: 'null'
                        id: 25613ab6-fb84-456d-bd14-8a748f2cf267
                        status: ACTIVE
                        createdAt: '2024-03-11T11:41:32.216Z'
                        updatedAt: '2024-03-11T11:43:31.855Z'
                        appName: Notion
                        logo: 'https://i.imgur.com/98qPYXd.png'
                      - connectorId: 31a23bf7-8df4-4e76-9860-143a7e3834a2
                        connectionParams:
                          base_url: 'https://api.notion.app'
                          client_id: 85b2ddba-74a4-4aab-8b35-d
                          client_secret: secret_K05OAKiG3Msyn2SChpm5
                        id: 27dd1aa9-3267-48e0-8b65-a65c1699589a
                        status: INITIATED
                        createdAt: '2024-03-09T13:11:25.166Z'
                        updatedAt: '2024-03-09T13:11:25.166Z'
                        appName: Notion
                        logo: 'https://i.imgur.com/98qPYXd.png'
                      - connectorId: 31a23bf7-8df4-4e76-
                        connectionParams:
                          owner:
                            type: user
                            user:
                              id: 99b093ad-f0ff-42ef-b
                              name: Utkarsh
                              type: person
                              object: user
                              person:
                                email: utkarsh@composio.dev
                              avatar_url: 'null'
                          bot_id: 95e803ea-6677-4fd5-a881
                          base_url: 'https://api.notion.app'
                          client_id: 85b2ddba-74a4-4a
                          request_id: a9979398-e15a-4d640-5162c9a3385b
                          token_type: bearer
                          access_token: secret_H3AAHjY96LPppWhyN4
                          workspace_id: 35adec70-dbef-9214-62ac8cdc4d75
                          client_secret: secret_G3MMecFqZVZ8syn2S
                          workspace_icon: 'null'
                          workspace_name: Composio
                          duplicated_template_id: 'null'
                        id: 6be44ecc-6a27-4675-a813-becf10465702
                        status: ACTIVE
                        createdAt: '2024-03-11T11:52:21.585Z'
                        updatedAt: '2024-03-11T11:52:27.463Z'
                        appName: Notion
                        logo: 'https://i.imgur.com/98qPYXd.png'
                      - connectorId: 31a23bf7-8df4-4e76-9860-
                        connectionParams:
                          base_url: 'https://api.notion.app'
                          client_id: 85b2ddba-74a4-4aab-8b35-
                          client_secret: secret_K05OAKiG3MMecFqZVZ8
                        id: 9b81f3c9-54b0-4e45-a6a2-4
                        status: INITIATED
                        createdAt: '2024-03-11T07:39:05.438Z'
                        updatedAt: '2024-03-11T07:39:05.438Z'
                        appName: Notion
                        logo: 'https://i.imgur.com/98qPYXd.png'
                    totalPages: 4
                    page: 1
      security:
        - authToken: []
      servers:
        - url: 'https://backend.composio.dev/api'
          description: baseurl
    post:
      tags:
        - connectedAccounts
      summary: Connect an Account
      description: |-
        Connect an account

        This endpoint allows you to connect an external app account with Composio. It requires the integration ID in the request body and returns the connection status, connection ID, and a redirect URL (if applicable) for completing the connection flow.

        Use this endpoint to initiate the process of connecting an external app for your end user.
      operationId: create-connection
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                integrationId:
                  type: string
                redirectUri:
                  type: string
                  examples:
                    - 'https://google.com'
              required:
                - integrationId
              x-examples:
                Example 1:
                  connectorId: 065bcbcf-e25b-4808-b4ad-13c16ad14824
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  connectionStatus:
                    type: string
                    enum:
                      - SUCCESS
                      - INITIATED
                      - FAILED
                  connectionId:
                    type: string
                  redirectUrl:
                    type: string
              examples:
                Create a connection:
                  value:
                    connectionStatus: INITIATED
                    connectionId: 4d3e5e98-2fd0-4e7b-841a-a
                    redirectUrl: 'https://github.com/login/oauth/authorize?client_id=e7c77&redirect_uri'
        '404':
          description: |-
            {
                "message": "Connector not found"
            }
      security:
        - authToken: []
      servers:
        - url: 'https://backend.composio.dev/api'
          description: baseurl
  '/v1/connectedAccounts/{connectedAccountId}':
    get:
      tags:
        - connectedAccounts
      summary: Get a Connected Account
      description: |-
        Retrieves details of a specific account connected to the Composio platform by providing its connected account ID. 
        The response includes the integration ID, connection parameters (such as scope, base URL, client ID, token type, access token, etc.), connection ID, status, and creation/update timestamps.
      operationId: get-connected-account
      parameters:
        - name: connectedAccountId
          in: path
          description: The unique identifier of the connection.
          required: true
          schema:
            type: string
            examples:
              - 4d3e5e98-2fd0-4e7b-841a-a208c031b731
          examples:
            default:
              value: 4d3e5e98-2fd0-4e7b-841a-a208c031b731
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  integrationId:
                    type: string
                    description: |
                      The unique identifier of the connector associated with the connection.
                  connectionParams:
                    type: object
                    description: An object containing the parameters specific to the connection.
                    properties:
                      scope:
                        type: string
                        description: The scope of permissions granted to the connection.
                      base_url:
                        type: string
                        description: The base URL for making API requests to the connected app.
                      client_id:
                        type: string
                        description: The client ID used for authentication with the connected app.
                      token_type:
                        type: string
                        description: ' The type of token used for authentication (e.g., "bearer").'
                      access_token:
                        type: string
                        description: The access token used for authentication with the connected app.
                      client_secret:
                        type: string
                        description: The client secret used for authentication with the connected app.
                  id:
                    type: string
                    description: The unique identifier of the connection.
                  status:
                    type: string
                    enum:
                      - ACTIVE
                      - INITIATED
                      - FAILED
                    description: ' The status of the connection (e.g., "SUCCESS").'
                  createdAt:
                    type: string
                    description: The timestamp indicating when the connection was created.
                  updatedAt:
                    type: string
                    description: The timestamp indicating when the connection was last updated.
              examples:
                Get a connection:
                  value:
                    connectorId: 065bcbcf-e25b-4808-b4ad-
                    connectionParams:
                      scope: ''
                      base_url: 'https://api.github.app'
                      client_id: e73c7edc82b30512e717
                      token_type: bearer
                      access_token: gho_KewHRYqIGjT
                      client_secret: f585c6035b3
                    id: 4d3e5e98-2fd0-4e7b-841a-031b731
                    status: ACTIVE
                    createdAt: '2024-03-11T17:13:05.237Z'
                    updatedAt: '2024-03-11T17:14:08.818Z'
        '404':
          description: |-
            {
                "message": "Connection not found or already deleted"
            }
      security:
        - authToken: []
      servers:
        - url: 'https://backend.composio.dev/api'
          description: baseurl
    delete:
      tags:
        - connectedAccounts
      summary: Delete a Connected Account
      description: |-
        Remove a specific account from the Composio platform by providing its connection ID. Upon successful deletion, the response includes a status indicating the success of the operation.
        Use this endpoint to clean up unwanted connections for your end user and manage the connection lifecycle.
      operationId: delete-connection
      parameters:
        - name: connectedAccountId
          in: path
          description: The unique identifier of the connection.
          required: true
          schema:
            type: string
            examples:
              - 4d3e5e98-2fd0-4e7b-841a-a208c031b731
          examples:
            default:
              value: 4d3e5e98-2fd0-4e7b-841a-a208c031b731
      responses:
        '200':
          description: |-
            {
                "message": "Connection not found or already deleted"
            }
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Status of the api call. '
              examples:
                Example Response:
                  value:
                    status: success
        '404':
          description: Not Found
      security:
        - authToken: []
      servers:
        - url: 'https://backend.composio.dev/api'
          description: baseurl
  '/v1/integrations/{integrationId}':
    get:
      tags:
        - integrations
      summary: Get an Integration
      description: |-
        Retrieves details of a specific integration in the Composio platform by providing its unique identifier. The response includes the connector's name, authentication scheme, authentication configuration, creation and update timestamps, enabled status, associated app information, expected input fields, and logo.

        Use this endpoint to obtain detailed information about a integration and its configuration. It can be shown to end user for selection. 

        You will also get parameters that are required to be captured from end user to connect an account using this connector. 
        ex. API Key or subdomain URL. 

        If the end-user selects this flow, collect the parameters and connect an account using it. 
      operationId: get-integration
      parameters:
        - name: integrationId
          in: path
          description: The unique identifier of the integration.
          required: true
          schema:
            type: string
            examples:
              - 065bcbcf-e25b-4808-b4ad-13c16ad14824
          examples:
            default:
              value: 065bcbcf-e25b-4808-b4ad-13c16ad14824
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: The unique identifier of the connector.
                  name:
                    type: string
                    description: The name of the connector.
                  authScheme:
                    type: string
                    description: 'The authentication scheme used by the connector (e.g., "OAUTH2", "API_KEY").'
                  authConfig:
                    type: object
                    description: An object containing the authentication configuration for the connector.
                    properties:
                      base_url:
                        type: string
                        description: The base URL for making API requests to the app.
                      client_id:
                        type: string
                        description: The client ID used for authentication with the app.
                      client_secret:
                        type: string
                        description: The client secret used for authentication with the app.
                  createdAt:
                    type: string
                    description: The timestamp indicating when the connector was created.
                  updatedAt:
                    type: string
                    description: The timestamp indicating when the connector was last updated.
                  enabled:
                    type: boolean
                    description: A boolean indicating whether the connector is enabled or not.
                  appId:
                    type: string
                    description: The unique identifier of the app associated with the connector.
                  expectedInputFields:
                    type: array
                    description: An array of input fields expected by the connector.
                    items:
                      type: object
                  logo:
                    type: string
                    description: The URL of the logo of the app associated with the connector.
                  appName:
                    type: string
                    description: The name of the app associated with the connector.
              examples:
                Get a connector:
                  value:
                    id: 065bcbcf-e25b-4808-b4ad-13c16ad14824
                    name: Github 1709897890337
                    authScheme: OAUTH2
                    authConfig:
                      base_url: 'https://api.github.app'
                      client_id: e73c7edc82b317
                      client_secret: f585c60af135b3e4ae02689291
                    createdAt: '2024-03-08T11:38:10.365Z'
                    updatedAt: '2024-03-11T14:56:49.606Z'
                    enabled: false
                    appId: cde35d34-9fde-3d1-ebe642ca665
                    expectedInputFields: []
                    logo: 'https://github.githubassets.com/assets/GitHub-Mark-ea2971cee799.png'
                    appName: github
        '404':
          description: Not Found
      security:
        - authToken: []
      servers:
        - url: 'https://backend.composio.dev/api'
          description: baseurl
    patch:
      tags:
        - integrations
      summary: Update an Integration
      description: |-
        Updates the settings of a specific integration in the Composio platform.

        This endpoint allows you to modify the settings of a integration, such as enabling or disabling it, by providing its unique identifier. The request body should include the updated settings, and the response indicates the success of the update operation.

        Use this endpoint to manage the configuration and behavior of integrations in the Composio platform.
      operationId: update-integration
      parameters:
        - name: integrationId
          in: path
          description: The unique identifier of the integration.
          required: true
          schema:
            type: string
            examples:
              - 31a23bf7-8df4-4e76-9860-143a7e3834a2
          examples:
            default:
              value: 31a23bf7-8df4-4e76-9860-143a7e3834a2
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                enabled:
                  type: boolean
                  description: All the parameters that you see in the GET connector
            examples:
              Example:
                value:
                  enabled: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
              examples:
                Example 1:
                  value:
                    status: success
        '404':
          description: Not Found
      security:
        - authToken: []
      servers:
        - url: 'https://backend.composio.dev/api'
          description: baseurl
  /v1/integrations:
    get:
      tags:
        - integrations
      summary: List All Integrations
      description: |-
        Retrieves a list of all integrations in the Composio platform. It supports pagination to handle large numbers of connectors. The response includes an array of connector objects, each containing information such as the connector's ID, name, authentication scheme, creation/update timestamps, enabled status, associated app information, and logo.

        This are the integration you can showcase to end user, and let them select which integration they want to connect an account with. 
      operationId: list-all-integrations
      parameters:
        - name: page
          in: query
          description: Page number to fetch
          schema:
            type: integer
            examples:
              - 1
          examples:
            default:
              value: 1
        - name: pageSize
          in: query
          description: Page Size to assume
          schema:
            type: integer
            examples:
              - 10
          examples:
            default:
              value: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: The unique identifier of the newly created connector.
                        name:
                          type: string
                          description: The name of the connector.
                        authScheme:
                          type: string
                          description: The authentication scheme used by the connector.
                        createdAt:
                          type: string
                          description: The timestamp indicating when the connector was created.
                        updatedAt:
                          type: string
                          description: The timestamp indicating when the connector was last updated.
                        enabled:
                          type: boolean
                          description: A boolean indicating whether the connector is enabled or not.
                        appId:
                          type: string
                          description: The unique identifier of the app associated with the connector.
                        appName:
                          type: string
                          description: The name of the app associated with the connector.
                        logo:
                          type: string
                          description: The URL of the logo of the app associated with the connector.
                  totalPages:
                    type: integer
                  page:
                    type: integer
              examples:
                List all connectors:
                  value:
                    items:
                      - id: 065bcbcf-e25b-4808-b4a6ad14824
                        name: Github 1709897890337
                        authScheme: OAUTH2
                        createdAt: '2024-03-08T11:38:10.365Z'
                        updatedAt: '2024-03-11T14:56:49.606Z'
                        enabled: false
                        appId: cde35d34-9fde-4e12-42ca665
                        appName: github
                        logo: 'https://github.githubassets.com/assets/GitHub-Mark-ea2971cee799.png'
                      - id: 200f53ac-04f92-91f8-68b747daff6a
                        name: Github - tomato_unique_hare
                        authScheme: API_KEY
                        createdAt: '2024-03-11T13:06:48.848Z'
                        updatedAt: '2024-03-11T13:06:48.848Z'
                        enabled: true
                        appId: cde35d34-9fde-4ebe642ca665
                        appName: github
                        logo: 'https://github.githubassets.com/assets/GitHub-Mark-ea2971cee799.png'
                      - id: 31a23bf7-8df4-4e7643a7e3834a2
                        name: Notion 1709920326906
                        authScheme: OAUTH2
                        createdAt: '2024-03-08T17:52:07.518Z'
                        updatedAt: '2024-03-11T14:46:22.604Z'
                        enabled: false
                        appId: db51f6f1-793f-446aa
                        appName: notion
                        logo: 'https://i.imgur.com/98qPYXd.png'
                    totalPages: 2
                    page: 1
      security:
        - authToken: []
      servers:
        - url: 'https://backend.composio.dev/api'
          description: baseurl
    post:
      tags:
        - integrations
      summary: Create a new integration
      description: 'This endpoint allows you to add a new integration by providing the necessary details such as the integration name, authentication scheme, associated app ID, and authentication configuration. Upon successful creation, the response includes the newly created connector object.'
      operationId: create-integration
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the connector.
                authScheme:
                  type: string
                  enum:
                    - OAUTH2
                    - API_KEY
                  description: 'The authentication scheme used by the connector (e.g., "OAUTH2", "API_KEY").'
                appId:
                  type: string
                  description: The unique identifier of the app associated with the connector.
                authConfig:
                  type: object
                  description: An object containing the authentication configuration for the connector.
                  properties:
                    client_id:
                      type: string
                      description: The client ID used for authentication with the app.
                    client_secret:
                      type: string
                      description: The client secret used for authentication with the app.
                    base_url:
                      type: string
                      description: ' The base URL for making API requests to the app.'
                useComposioAuth:
                  type: boolean
                  description: 'Use default Composio credentials to proceed. The developer app credentials will be of Composio.  '
            examples:
              Creating a connector:
                value:
                  name: hello
                  authScheme: OAUTH2
                  appId: db51f6f1-793f-449e-9221-bc6043e3d6aa
                  authConfig:
                    client_id: dasdasdasdas
                    client_secret: dasdasdasdasdasdas
                    base_url: 'https://app.asana.com'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: The unique identifier of the newly created connector.
                  name:
                    type: string
                    description: The name of the connector.
                  authScheme:
                    type: string
                    description: The authentication scheme used by the connector.
                  authConfig:
                    type: object
                    description: An object containing the authentication configuration for the connector.
                    properties:
                      base_url:
                        type: string
                        description: The base URL for making API requests to the app.
                      client_id:
                        type: string
                        description: The client ID used for authentication with the app.
                      client_secret:
                        type: string
                        description: The client secret used for authentication with the app.
                  createdAt:
                    type: string
                    description: The timestamp indicating when the connector was created.
                  updatedAt:
                    type: string
                    description: The timestamp indicating when the connector was last updated.
                  enabled:
                    type: boolean
                    description: ' A boolean indicating whether the connector is enabled or not.'
                  appId:
                    type: string
                    description: The unique identifier of the app associated with the connector.
                  expectedInputFields:
                    type: array
                    description: An array of input fields expected by the connector.
                    items:
                      type: object
                  logo:
                    type: string
                    description: The URL of the logo of the app associated with the connector.
                  appName:
                    type: string
                    description: The name of the app associated with the connector.
              examples:
                Create a connector:
                  value:
                    id: 2184fd84-2fcae-873e-28218f7c0a0b
                    name: hello
                    authScheme: OAUTH2
                    authConfig:
                      base_url: 'https://app.asana.com'
                      client_id: dasdasdasdas
                      client_secret: dasdasdasdasdasdas
                    createdAt: '2024-03-11T17:23:15.477Z'
                    updatedAt: '2024-03-11T17:23:15.477Z'
                    enabled: false
                    appId: db51f6f1-449e-9221-bc6043e3d6aa
                    expectedInputFields: []
                    logo: 'https://i.imgur.com/98qPYXd.png'
                    appName: notion
        '400':
          description: Bad Request
      security:
        - authToken: []
      servers:
        - url: 'https://backend.composio.dev/api'
          description: baseurl
  '/v1/actions/{actionName}':
    get:
      tags:
        - actions
      summary: Get a Specific Action
      description: |-
        Retrieves details of a specific action in the Composio platform.

        This endpoint allows you to fetch comprehensive information about a particular action by providing its unique identifier.
        The response includes the action's name, display name, description, input parameters, expected response, associated app information, and enabled status.
        Use this endpoint to obtain detailed information about an action, including its configuration and usage requirements. 
        You can then pass this to function calling or use LLM to fill in the parameters. 
      operationId: Get-action
      parameters:
        - name: actionName
          in: path
          description: The unique identifier of the action.
          required: true
          schema:
            type: string
            examples:
              - CreateSubtask
          examples:
            default:
              value: CreateSubtask
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: The name of the action.
                  display_name:
                    type: string
                    description: The display name of the action.
                  description:
                    type: string
                    description: |
                      A description of the action.
                  parameters:
                    type: object
                    description: ' An object describing the input parameters of the action.'
                    properties:
                      properties:
                        type: object
                        description: An object containing the properties of the input parameters.
                      required:
                        type: array
                        description: An array of required parameter names.
                        items:
                          type: string
                      title:
                        type: string
                        description: The title of the input parameters.
                      type:
                        type: string
                        description: 'The type of the input parameters (e.g., "object").'
                  response:
                    type: object
                    description: An object describing the response of the action.
                    properties:
                      properties:
                        type: object
                        description: An object containing the properties of the response.
                      required:
                        type: array
                        description: An array of required response field names.
                        items:
                          type: string
                      title:
                        type: string
                        description: The title of the response.
                      type:
                        type: string
                        description: 'The type of the response (e.g., "object").'
                  appId:
                    type: string
                    description: The unique identifier of the app associated with the action.
                  logo:
                    type: string
                    description: The URL of the logo of the app associated with the action.
                  appName:
                    type: string
                    description: The name of the app associated with the action.
                  enabled:
                    type: boolean
                    description: A boolean indicating whether the action is enabled or not.
              examples:
                Get CreateSubtask:
                  value:
                    name: CreateSubtask
                    display_name: Create Subtask
                    description: Create a subtask under a specific task.
                    parameters:
                      properties:
                        workspace:
                          description: Workspace ID
                          title: Workspace
                          type: string
                        task_id:
                          description: Parent Task ID
                          title: Task Id
                          type: string
                        name:
                          description: Name of the subtask
                          title: Name
                          type: string
                        assignee:
                          default: '12312'
                          description: Assignee ID
                          title: Assignee
                          type: string
                        assignee_status:
                          default: '12312'
                          description: Assignee status
                          title: Assignee Status
                          type: string
                        completed:
                          default: false
                          description: Whether the subtask is completed
                          title: Completed
                          type: boolean
                        due_on:
                          default: '12312'
                          description: Due date for the subtask
                          title: Due On
                          type: string
                        liked:
                          default: false
                          description: Whether the subtask is liked
                          title: Liked
                          type: boolean
                        notes:
                          default: '12312'
                          description: Subtask notes
                          title: Notes
                          type: string
                      required:
                        - workspace
                        - task_id
                        - name
                      title: CreateSubtaskRequest
                      type: object
                    response:
                      properties:
                        id:
                          description: ID of the created subtask
                          title: Id
                          type: string
                      required:
                        - id
                      title: CreateSubtaskResponse
                      type: object
                    appId: 36a0705d-7e93-42ba-926ee6201d7c
                    logo: 'https://assets.asana.biz/m/7342a96f034ee491/original/trademark-logo-lockup-horizontal.png'
                    appName: Asana
                    enabled: true
        '404':
          description: Not Found
      security:
        - authToken: []
      servers:
        - url: 'https://backend.composio.dev/api'
          description: baseurl
  /v1/actions:
    get:
      tags:
        - actions
      summary: Get List of Actions
      description: |-
        Retrieves a list of all actions in the Composio platform.

        This endpoint allows you to fetch a list of all the available actions. It supports pagination to handle large numbers of actions. The response includes an array of action objects, each containing information such as the action's name, display name, description, input parameters, expected response, associated app information, and enabled status.

        Use this endpoint to explore and discover the actions supported by the Composio platform and showcase them to end user. 
      operationId: Get-List-Actions
      parameters:
        - name: appNames
          in: query
          description: 'Name of the app like "github", "linear"'
          schema:
            type: string
        - name: useCase
          in: query
          description: Natural language usecase
          schema:
            type: string
            examples:
              - 'Star a Github Repo, create a new issue on linear'
        - name: showEnabledOnly
          in: query
          description: Show actions enabled for the API Key
          schema:
            type: boolean
        - name: limit
          in: query
          description: Limit of apis
          schema:
            type: string
            default: '10'
            examples:
              - '5,10,20'
      requestBody:
        content: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    description: An array of action objects.
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: ' The name of the action.'
                        display_name:
                          type: string
                          description: The display name of the action.
                        description:
                          type: string
                          description: A description of the action.
                        parameters:
                          type: object
                          description: An object describing the input parameters of the action.
                          properties:
                            properties:
                              type: object
                              description: An object containing the properties of the input parameters.
                            required:
                              type: array
                              description: An array of required parameter names.
                              items:
                                type: string
                            title:
                              type: string
                              description: The title of the input parameters.
                            type:
                              type: string
                              description: 'The type of the input parameters (e.g., "object").'
                        response:
                          type: object
                          description: An object describing the response of the action.
                          properties:
                            properties:
                              type: object
                              description: ' An object containing the properties of the response.'
                            required:
                              type: array
                              description: An array of required response field names.
                              items:
                                type: string
                            title:
                              type: string
                              description: The title of the response.
                            type:
                              type: string
                              description: 'The type of the response (e.g., "object").'
                        appId:
                          type: string
                          description: The unique identifier of the app associated with the action.
                        logo:
                          type: string
                          description: The URL of the logo of the app associated with the action.
                        appName:
                          type: string
                          description: The name of the app associated with the action.
                        enabled:
                          type: boolean
                          description: |-
                            A boolean indicating whether the action is enabled or not. This is decided based on whether you have created a connector for the same app.
                            Without creating a connector and then connection for the app, you won't be able to execute the action. 
                  page:
                    type: integer
                    description: The current page number of the action list.
                  totalPages:
                    type: integer
                    description: The total number of pages available for the action list.
      security:
        - authToken: []
      servers:
        - url: 'https://backend.composio.dev/api'
          description: baseurl
  '/v1/actions/{actionName}/execute':
    post:
      tags:
        - actions
      summary: Execute action
      description: |-
        Executes a specific action in the Composio platform.

        This endpoint allows you to trigger the execution of an action by providing its name and the necessary input parameters. The request includes the connected account ID to identify the app connection to use for the action, and the input parameters required by the action. The response provides details about the execution status and the response data returned by the action.

        Use this endpoint to execute actions available in the Composio platform for your end customer. 

        Executed will indicate whether the action was successfully executed. 
      operationId: Execute-Action
      parameters:
        - name: actionName
          in: path
          description: The name of the action to execute.
          required: true
          schema:
            type: string
            examples:
              - CreateIssue
          examples:
            default:
              value: CreateIssue
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                connectedAccountId:
                  type: string
                  description: The unique identifier of the connection to use for executing the action.
                input:
                  type: object
                  description: An object containing the input parameters for the action.
                appName:
                  type: string
            examples:
              Execute Action:
                value:
                  connectionId: 2ae1674c-96fa-42a3-8458-c76293df6
                  input:
                    owner: utkarsh-dixit
                    repo: speedy
                    title: testing E2E new 6
                    body: testing E2E new 6
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  execution_details:
                    type: object
                    description: An object containing the details of the action execution.
                    properties:
                      executed:
                        type: boolean
                        description: |
                          A boolean indicating whether the action was executed successfully.
                  response_data:
                    type: object
                    description: An object containing the response data from the action execution.
              examples:
                Example Response Create Issue:
                  value:
                    execution_details:
                      executed: true
                    response_data:
                      url: 'https://api.github.com/repos/utkarsh-dixit/speedy/issues/14'
                      repository_url: 'https://api.github.com/repos/utkarsh-dixit/speedy'
                      labels_url: 'https://api.github.com/repos/utkarsh-dixit/speedy/issues/14/labels{/name}'
                      comments_url: 'https://api.github.com/repos/utkarsh-dixit/speedy/issues/14/comments'
                      events_url: 'https://api.github.com/repos/utkarsh-dixit/speedy/issues/14/events'
                      html_url: 'https://github.com/utkarsh-dixit/speedy/issues/14'
                      id: 2179737980
                      node_id: I_kwDOIq0jNs6B7Cl8
                      number: 14
                      title: testing E2E new 6
                      user:
                        login: utkarsh-dixit
                        id: 16796008
                        node_id: MDQ6VXNlcjE2Nzk2MDA4
                        avatar_url: 'https://avatars.githubusercontent.com/u/16796008?v=4'
                        gravatar_id: ''
                        url: 'https://api.github.com/users/utkarsh-dixit'
                        html_url: 'https://github.com/utkarsh-dixit'
                        followers_url: 'https://api.github.com/users/utkarsh-dixit/followers'
                        following_url: 'https://api.github.com/users/utkarsh-dixit/following{/other_user}'
                        gists_url: 'https://api.github.com/users/utkarsh-dixit/gists{/gist_id}'
                        starred_url: 'https://api.github.com/users/utkarsh-dixit/starred{/owner}{/repo}'
                        subscriptions_url: 'https://api.github.com/users/utkarsh-dixit/subscriptions'
                        organizations_url: 'https://api.github.com/users/utkarsh-dixit/orgs'
                        repos_url: 'https://api.github.com/users/utkarsh-dixit/repos'
                        events_url: 'https://api.github.com/users/utkarsh-dixit/events{/privacy}'
                        received_events_url: 'https://api.github.com/users/utkarsh-dixit/received_events'
                        type: User
                        site_admin: false
                      labels: []
                      state: open
                      locked: false
                      assignee: null
                      assignees: []
                      milestone: null
                      comments: 0
                      created_at: '2024-03-11T17:28:13Z'
                      updated_at: '2024-03-11T17:28:13Z'
                      closed_at: null
                      author_association: OWNER
                      active_lock_reason: null
                      body: testing E2E new 6
                      closed_by: null
                      reactions:
                        url: 'https://api.github.com/repos/utkarsh-dixit/speedy/issues/14/reactions'
                        total_count: 0
                        '+1': 0
                        '-1': 0
                        laugh: 0
                        hooray: 0
                        confused: 0
                        heart: 0
                        rocket: 0
                        eyes: 0
                      timeline_url: 'https://api.github.com/repos/utkarsh-dixit/speedy/issues/14/timeline'
                      performed_via_github_app: null
                      state_reason: null
        '404':
          description: Not Found
      security:
        - authToken: []
      servers:
        - url: 'https://backend.composio.dev/api'
          description: baseurl
  '/v1/triggers':
    get:
      tags:
        - triggers
      summary: Get List of Triggers
      description: |-
        Retrieves a list of all triggers in the Composio platform.

        This endpoint allows you to fetch a list of all the available triggers. It supports pagination to handle large numbers of triggers. The response includes an array of trigger objects, each containing information such as the trigger's name, description, input parameters, expected response, associated app information, and enabled status.

        Use this endpoint to explore and discover the triggers supported by the Composio platform and showcase them to end user. 
      operationId: List-Triggers
      parameters:
        - name: appNames
          in: query
          description: 'Name of the apps like "github", "linear" separated by a comma'
          schema:
            type: string
            examples:
              - 'github,linear'
        - name: showEnabledOnly
          in: query
          description: Show triggers enabled for the API Key
          schema:
            type: boolean
        - name: connectedAccountIds
          in: query
          description: Filter by Connected Account ids
          schema:
            type: string
            examples:
              - '12312,12312'
            operationId: list-all-apps
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: The name of the event.
                      display_name:
                        type: string
                        description: The display name of the event.
                      description:
                        type: string
                        description: A brief description of the event.
                      payload:
                        type: object
                        properties:
                          properties:
                            type: object
                            properties:
                              id:
                                type: string
                                description: The SHA of the commit.
                                examples:
                                  - "7638417db6d59f3c431d3e1f261cc637155684cd"
                              message:
                                type: string
                                description: The commit message.
                                examples:
                                  - "Fix typo in README"
                              timestamp:
                                type: string
                                description: The timestamp of the commit.
                                examples:
                                  - "2021-04-14T02:15:15Z"
                              author:
                                type: string
                                description: The GitHub username of the commit author.
                                examples:
                                  - "octocat"
                              url:
                                type: string
                                description: The GitHub URL of the commit.
                                examples:
                                  - "https://github.com/octocat/Hello-World/commit/7638417db6d59f3c431d3e1f261cc637155684cd"
                            required:
                              - id
                              - message
                              - timestamp
                              - author
                              - url
                            title: CommitPayloadSchema
                      config:
                        type: object
                        properties:
                          type: 
                            type: string
                          title:
                            type: string
                          required:
                            type: array
                            items:
                              type: string
                          properties:
                            type: object
                            properties:
                              type:
                                type: string
                                title: string
                                description: string
                              title:
                                type: string
                                title: string
                                description: string
                              description:
                                type: string
                                title: string
                                description: string
                              required:
                                type: array
                                items:
                                  type: string
                      instructions:
                        type: string
                        description: Instructions for the event.
                      appId:
                        type: string
                        description: The unique ID of the app.
                      appKey:
                        type: string
                        description: The key of the app.
                      logo:
                        type: string
                        description: The URL of the app's logo image.
                      appName:
                        type: string
                        description: The name of the app.
                      count:
                        type: integer
                        description: The count of the event.
                      enabled:
                        type: boolean
                        description: Whether the event is enabled.
                    
              examples:
                List All Apps:
                  value:
                    items:
                      - key: asana
                        name: Asana
                        description: 'Tool to help teams organize, track, and manage their work.'
                        logo: 'https://assets.asana.biz/m/7342a96f034ee491/original/trademark-logo-lockup-horizontal.png'
                        categories:
                          - productivity
                          - ticketing
                        appId: 36a0705d-7e93-42ba-9288-436ee6201d7c
                      - key: calendly
                        name: Calendly
                        description: 'A business communication platform used for teams to schedule, prepare and follow up on external meetings.'
                        logo: 'https://upload.wikimedia.org/wikipedia/en/thumb/7/7f/Calendly_company_logo.png/330px-Calendly_company_logo.png'
                        categories:
                          - productivity
                        appId: fb9b4a59-8eda-4032-84d7-638e1df4ffef
      security:
        - authToken: []
      servers:
  '/v1/triggers/active_triggers':
    description: Retrieves a list of all active triggers in the Composio platform.
    get:
      summary: Get List of Active Triggers
      operationId: List-Active-Triggers
      parameters:
        - name: connectedAccountIds
          in: query
          description: Filter by Connected Account ids
          required: false
          schema:
            type: string
        - name: integrationIds
          in: query
          description: Filter by Integration ids
          required: false
          schema:
            type: string
        - name: triggerIds
          in: query
          description: Filter by Trigger ids
          required: false
          schema:
            type: string
        - name: triggerNames
          in: query
          description: Filter by Trigger names
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A list of active triggers
          content:
            application/json:
              schema:
                type: object
                properties:
                  triggers:
                    type: array
                    items:
                      type: object
                      properties:
                          id:
                            type: string
                            description: Unique identifier for the trigger.
                          connectionId:
                            type: string
                            description: Identifier for the connection associated with the trigger.
                          triggerName:
                            type: string
                            description: Name of the trigger.
                          triggerData:
                            type: string
                            description: Data associated with the trigger.
                          triggerConfig:
                            type: object
                            description: Configuration settings for the trigger.
                            default: {}
                          state:
                            type: object
                            description: State information for the trigger.
                            default: {}
                          createdAt:
                            type: string
                            format: date-time
                            description: Timestamp when the trigger was created.
                          updatedAt:
                            type: string
                            format: date-time
                            description: Timestamp when the trigger was last updated.
                          disabledAt:
                            type: string
                            format: date-time
                            description: Timestamp when the trigger was disabled, if applicable.
                  pageInfo:
                    type: object
                    properties:
                      currentPage:
                        type: integer
                        description: The current page number.
                      totalPages:
                        type: integer
                        description: The total number of pages.
                      perPage:
                        type: integer
                        description: The number of items per page.
  /v1/triggers/get/{triggerId}:
    get:
      summary: Get Active Trigger
      operationId: Get-Active-Trigger
      description: Retrieves details of a specific active trigger in the Composio platform by providing its trigger ID.
      parameters:
        - name: triggerId
          in: path
          required: true
          description: The ID of the trigger to retrieve.
          schema:
            type: string
      responses:
        '200':
          description: A successful response containing the details of the active trigger.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique identifier for the trigger.
                  connectionId:
                    type: string
                    description: Identifier for the connection associated with the trigger.
                  triggerName:
                    type: string
                    description: Name of the trigger.
                  triggerData:
                    type: string
                    description: Data associated with the trigger.
                  triggerConfig:
                      type: object
                      description: Configuration settings for the trigger.
                      default: {}
                  state:
                    type: object
                    description: State information for the trigger.
                    default: {}
                  createdAt:
                    type: string
                    format: date-time
                    description: Timestamp when the trigger was created.
                  updatedAt:
                    type: string
                    format: date-time
                    description: Timestamp when the trigger was last updated.
                  disabledAt:
                      type: string
                      format: date-time
                      description: Timestamp when the trigger was disabled, if applicable.
        '404':
          description: Trigger not found
        '500':
          description: Internal server error
tags:
  - name: actions
  - name: apps
  - name: connectedAccounts
  - name: integrations
  - name: triggers
components:
  securitySchemes:
    authToken:
      type: apiKey
      name: X-API-Key
      in: header
security:
  - authToken: []