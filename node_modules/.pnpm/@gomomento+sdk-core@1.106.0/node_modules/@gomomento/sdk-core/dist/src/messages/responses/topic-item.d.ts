export interface TopicItemOptions {
    tokenId?: string;
}
/**
 * Represents the data received from a topic subscription.
 *
 * @remarks A subscription is created by calling {@link TopicClient.subscribe}.
 * The value is guaranteed to be either a {@link string} or a {@link Uint8Array}.
 * Call the appropriate accessor if you know the type of the value.
 */
export declare class TopicItem {
    private readonly _value;
    private readonly _tokenId?;
    private readonly _sequenceNumber;
    constructor(_value: string | Uint8Array, _sequenceNumber: number, options?: TopicItemOptions);
    /**
     * Returns the data read from the stream.
     * @returns string | Uint8Array
     */
    value(): string | Uint8Array;
    /**
     * Returns the data read from the stream as a {@link string}.
     * @returns string
     */
    valueString(): string;
    /**
     * Returns the data read from the stream as a {@link Uint8Array}.
     * @returns Uint8Array
     */
    valueUint8Array(): Uint8Array;
    /**
     * Optionally returns the publisher ID from the steam if it exists.
     * @returns string | undefined
     */
    tokenId(): string | undefined;
    /**
     * Returns the sequence number of the item.
     * @returns number
     */
    sequenceNumber(): number;
    toString(): string;
}
