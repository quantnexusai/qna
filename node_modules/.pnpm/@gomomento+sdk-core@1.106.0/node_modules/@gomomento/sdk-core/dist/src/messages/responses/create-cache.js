"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Error = exports.AlreadyExists = exports.Success = void 0;
const response_base_1 = require("./response-base");
const enums_1 = require("./enums");
/**
 * Indicates a successful create cache request.
 */
class Success extends response_base_1.BaseResponseSuccess {
    constructor() {
        super(...arguments);
        this.type = enums_1.CreateCacheResponse.Success;
    }
}
exports.Success = Success;
/**
 * Indicates that the cache already exists and no new cache was created.
 */
class AlreadyExists extends response_base_1.ResponseBase {
    constructor() {
        super(...arguments);
        this.type = enums_1.CreateCacheResponse.AlreadyExists;
    }
}
exports.AlreadyExists = AlreadyExists;
/**
 * Indicates that an error occurred during the create cache request.
 *
 * This response object includes the following fields that you can use to determine
 * how you would like to handle the error:
 *
 * - `errorCode()` - a unique Momento error code indicating the type of error that occurred.
 * - `message()` - a human-readable description of the error
 * - `innerException()` - the original error that caused the failure; can be re-thrown.
 */
class Error extends response_base_1.BaseResponseError {
    constructor(_innerException) {
        super(_innerException);
        this.type = enums_1.CreateCacheResponse.Error;
    }
}
exports.Error = Error;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLWNhY2hlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL21lc3NhZ2VzL3Jlc3BvbnNlcy9jcmVhdGUtY2FjaGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsbURBSXlCO0FBQ3pCLG1DQUE0QztBQU01Qzs7R0FFRztBQUNILE1BQWEsT0FBUSxTQUFRLG1DQUFtQjtJQUFoRDs7UUFDVyxTQUFJLEdBQWdDLDJCQUFtQixDQUFDLE9BQU8sQ0FBQztJQUMzRSxDQUFDO0NBQUE7QUFGRCwwQkFFQztBQUVEOztHQUVHO0FBQ0gsTUFBYSxhQUFjLFNBQVEsNEJBQVk7SUFBL0M7O1FBQ1csU0FBSSxHQUNYLDJCQUFtQixDQUFDLGFBQWEsQ0FBQztJQUN0QyxDQUFDO0NBQUE7QUFIRCxzQ0FHQztBQUVEOzs7Ozs7Ozs7R0FTRztBQUNILE1BQWEsS0FBTSxTQUFRLGlDQUFpQjtJQUMxQyxZQUFZLGVBQXlCO1FBQ25DLEtBQUssQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUdoQixTQUFJLEdBQThCLDJCQUFtQixDQUFDLEtBQUssQ0FBQztJQUZyRSxDQUFDO0NBR0Y7QUFORCxzQkFNQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7U2RrRXJyb3J9IGZyb20gJy4uLy4uL2Vycm9ycyc7XG5pbXBvcnQge1xuICBCYXNlUmVzcG9uc2VFcnJvcixcbiAgQmFzZVJlc3BvbnNlU3VjY2VzcyxcbiAgUmVzcG9uc2VCYXNlLFxufSBmcm9tICcuL3Jlc3BvbnNlLWJhc2UnO1xuaW1wb3J0IHtDcmVhdGVDYWNoZVJlc3BvbnNlfSBmcm9tICcuL2VudW1zJztcblxuaW50ZXJmYWNlIElSZXNwb25zZSB7XG4gIHJlYWRvbmx5IHR5cGU6IENyZWF0ZUNhY2hlUmVzcG9uc2U7XG59XG5cbi8qKlxuICogSW5kaWNhdGVzIGEgc3VjY2Vzc2Z1bCBjcmVhdGUgY2FjaGUgcmVxdWVzdC5cbiAqL1xuZXhwb3J0IGNsYXNzIFN1Y2Nlc3MgZXh0ZW5kcyBCYXNlUmVzcG9uc2VTdWNjZXNzIGltcGxlbWVudHMgSVJlc3BvbnNlIHtcbiAgcmVhZG9ubHkgdHlwZTogQ3JlYXRlQ2FjaGVSZXNwb25zZS5TdWNjZXNzID0gQ3JlYXRlQ2FjaGVSZXNwb25zZS5TdWNjZXNzO1xufVxuXG4vKipcbiAqIEluZGljYXRlcyB0aGF0IHRoZSBjYWNoZSBhbHJlYWR5IGV4aXN0cyBhbmQgbm8gbmV3IGNhY2hlIHdhcyBjcmVhdGVkLlxuICovXG5leHBvcnQgY2xhc3MgQWxyZWFkeUV4aXN0cyBleHRlbmRzIFJlc3BvbnNlQmFzZSBpbXBsZW1lbnRzIElSZXNwb25zZSB7XG4gIHJlYWRvbmx5IHR5cGU6IENyZWF0ZUNhY2hlUmVzcG9uc2UuQWxyZWFkeUV4aXN0cyA9XG4gICAgQ3JlYXRlQ2FjaGVSZXNwb25zZS5BbHJlYWR5RXhpc3RzO1xufVxuXG4vKipcbiAqIEluZGljYXRlcyB0aGF0IGFuIGVycm9yIG9jY3VycmVkIGR1cmluZyB0aGUgY3JlYXRlIGNhY2hlIHJlcXVlc3QuXG4gKlxuICogVGhpcyByZXNwb25zZSBvYmplY3QgaW5jbHVkZXMgdGhlIGZvbGxvd2luZyBmaWVsZHMgdGhhdCB5b3UgY2FuIHVzZSB0byBkZXRlcm1pbmVcbiAqIGhvdyB5b3Ugd291bGQgbGlrZSB0byBoYW5kbGUgdGhlIGVycm9yOlxuICpcbiAqIC0gYGVycm9yQ29kZSgpYCAtIGEgdW5pcXVlIE1vbWVudG8gZXJyb3IgY29kZSBpbmRpY2F0aW5nIHRoZSB0eXBlIG9mIGVycm9yIHRoYXQgb2NjdXJyZWQuXG4gKiAtIGBtZXNzYWdlKClgIC0gYSBodW1hbi1yZWFkYWJsZSBkZXNjcmlwdGlvbiBvZiB0aGUgZXJyb3JcbiAqIC0gYGlubmVyRXhjZXB0aW9uKClgIC0gdGhlIG9yaWdpbmFsIGVycm9yIHRoYXQgY2F1c2VkIHRoZSBmYWlsdXJlOyBjYW4gYmUgcmUtdGhyb3duLlxuICovXG5leHBvcnQgY2xhc3MgRXJyb3IgZXh0ZW5kcyBCYXNlUmVzcG9uc2VFcnJvciBpbXBsZW1lbnRzIElSZXNwb25zZSB7XG4gIGNvbnN0cnVjdG9yKF9pbm5lckV4Y2VwdGlvbjogU2RrRXJyb3IpIHtcbiAgICBzdXBlcihfaW5uZXJFeGNlcHRpb24pO1xuICB9XG5cbiAgcmVhZG9ubHkgdHlwZTogQ3JlYXRlQ2FjaGVSZXNwb25zZS5FcnJvciA9IENyZWF0ZUNhY2hlUmVzcG9uc2UuRXJyb3I7XG59XG5cbmV4cG9ydCB0eXBlIFJlc3BvbnNlID0gU3VjY2VzcyB8IEFscmVhZHlFeGlzdHMgfCBFcnJvcjtcbiJdfQ==