"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Error = exports.NotStored = exports.Stored = void 0;
const response_base_1 = require("./response-base");
const enums_1 = require("./enums");
/**
 * Indicates the key did not exist and the value was set.
 */
class Stored extends response_base_1.ResponseBase {
    constructor() {
        super(...arguments);
        this.type = enums_1.CacheSetIfNotExistsResponse.Stored;
    }
}
exports.Stored = Stored;
/**
 * Indicates the key already exists and no value was set.
 */
class NotStored extends response_base_1.ResponseBase {
    constructor() {
        super(...arguments);
        this.type = enums_1.CacheSetIfNotExistsResponse.NotStored;
    }
}
exports.NotStored = NotStored;
/**
 * Indicates that an error occurred during the setIfNotExists request.
 *
 * This response object includes the following fields that you can use to determine
 * how you would like to handle the error:
 *
 * - `errorCode()` - a unique Momento error code indicating the type of error that occurred.
 * - `message()` - a human-readable description of the error
 * - `innerException()` - the original error that caused the failure; can be re-thrown.
 */
class Error extends response_base_1.BaseResponseError {
    constructor(_innerException) {
        super(_innerException);
        this.type = enums_1.CacheSetIfNotExistsResponse.Error;
    }
}
exports.Error = Error;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGUtc2V0LWlmLW5vdC1leGlzdHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbWVzc2FnZXMvcmVzcG9uc2VzL2NhY2hlLXNldC1pZi1ub3QtZXhpc3RzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLG1EQUFnRTtBQUNoRSxtQ0FBb0Q7QUFNcEQ7O0dBRUc7QUFDSCxNQUFhLE1BQU8sU0FBUSw0QkFBWTtJQUF4Qzs7UUFDVyxTQUFJLEdBQ1gsbUNBQTJCLENBQUMsTUFBTSxDQUFDO0lBQ3ZDLENBQUM7Q0FBQTtBQUhELHdCQUdDO0FBRUQ7O0dBRUc7QUFDSCxNQUFhLFNBQVUsU0FBUSw0QkFBWTtJQUEzQzs7UUFDVyxTQUFJLEdBQ1gsbUNBQTJCLENBQUMsU0FBUyxDQUFDO0lBQzFDLENBQUM7Q0FBQTtBQUhELDhCQUdDO0FBRUQ7Ozs7Ozs7OztHQVNHO0FBQ0gsTUFBYSxLQUFNLFNBQVEsaUNBQWlCO0lBQzFDLFlBQVksZUFBeUI7UUFDbkMsS0FBSyxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBR2hCLFNBQUksR0FDWCxtQ0FBMkIsQ0FBQyxLQUFLLENBQUM7SUFIcEMsQ0FBQztDQUlGO0FBUEQsc0JBT0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1Nka0Vycm9yfSBmcm9tICcuLi8uLi9lcnJvcnMnO1xuaW1wb3J0IHtCYXNlUmVzcG9uc2VFcnJvciwgUmVzcG9uc2VCYXNlfSBmcm9tICcuL3Jlc3BvbnNlLWJhc2UnO1xuaW1wb3J0IHtDYWNoZVNldElmTm90RXhpc3RzUmVzcG9uc2V9IGZyb20gJy4vZW51bXMnO1xuXG5pbnRlcmZhY2UgSVJlc3BvbnNlIHtcbiAgcmVhZG9ubHkgdHlwZTogQ2FjaGVTZXRJZk5vdEV4aXN0c1Jlc3BvbnNlO1xufVxuXG4vKipcbiAqIEluZGljYXRlcyB0aGUga2V5IGRpZCBub3QgZXhpc3QgYW5kIHRoZSB2YWx1ZSB3YXMgc2V0LlxuICovXG5leHBvcnQgY2xhc3MgU3RvcmVkIGV4dGVuZHMgUmVzcG9uc2VCYXNlIGltcGxlbWVudHMgSVJlc3BvbnNlIHtcbiAgcmVhZG9ubHkgdHlwZTogQ2FjaGVTZXRJZk5vdEV4aXN0c1Jlc3BvbnNlLlN0b3JlZCA9XG4gICAgQ2FjaGVTZXRJZk5vdEV4aXN0c1Jlc3BvbnNlLlN0b3JlZDtcbn1cblxuLyoqXG4gKiBJbmRpY2F0ZXMgdGhlIGtleSBhbHJlYWR5IGV4aXN0cyBhbmQgbm8gdmFsdWUgd2FzIHNldC5cbiAqL1xuZXhwb3J0IGNsYXNzIE5vdFN0b3JlZCBleHRlbmRzIFJlc3BvbnNlQmFzZSBpbXBsZW1lbnRzIElSZXNwb25zZSB7XG4gIHJlYWRvbmx5IHR5cGU6IENhY2hlU2V0SWZOb3RFeGlzdHNSZXNwb25zZS5Ob3RTdG9yZWQgPVxuICAgIENhY2hlU2V0SWZOb3RFeGlzdHNSZXNwb25zZS5Ob3RTdG9yZWQ7XG59XG5cbi8qKlxuICogSW5kaWNhdGVzIHRoYXQgYW4gZXJyb3Igb2NjdXJyZWQgZHVyaW5nIHRoZSBzZXRJZk5vdEV4aXN0cyByZXF1ZXN0LlxuICpcbiAqIFRoaXMgcmVzcG9uc2Ugb2JqZWN0IGluY2x1ZGVzIHRoZSBmb2xsb3dpbmcgZmllbGRzIHRoYXQgeW91IGNhbiB1c2UgdG8gZGV0ZXJtaW5lXG4gKiBob3cgeW91IHdvdWxkIGxpa2UgdG8gaGFuZGxlIHRoZSBlcnJvcjpcbiAqXG4gKiAtIGBlcnJvckNvZGUoKWAgLSBhIHVuaXF1ZSBNb21lbnRvIGVycm9yIGNvZGUgaW5kaWNhdGluZyB0aGUgdHlwZSBvZiBlcnJvciB0aGF0IG9jY3VycmVkLlxuICogLSBgbWVzc2FnZSgpYCAtIGEgaHVtYW4tcmVhZGFibGUgZGVzY3JpcHRpb24gb2YgdGhlIGVycm9yXG4gKiAtIGBpbm5lckV4Y2VwdGlvbigpYCAtIHRoZSBvcmlnaW5hbCBlcnJvciB0aGF0IGNhdXNlZCB0aGUgZmFpbHVyZTsgY2FuIGJlIHJlLXRocm93bi5cbiAqL1xuZXhwb3J0IGNsYXNzIEVycm9yIGV4dGVuZHMgQmFzZVJlc3BvbnNlRXJyb3IgaW1wbGVtZW50cyBJUmVzcG9uc2Uge1xuICBjb25zdHJ1Y3RvcihfaW5uZXJFeGNlcHRpb246IFNka0Vycm9yKSB7XG4gICAgc3VwZXIoX2lubmVyRXhjZXB0aW9uKTtcbiAgfVxuXG4gIHJlYWRvbmx5IHR5cGU6IENhY2hlU2V0SWZOb3RFeGlzdHNSZXNwb25zZS5FcnJvciA9XG4gICAgQ2FjaGVTZXRJZk5vdEV4aXN0c1Jlc3BvbnNlLkVycm9yO1xufVxuXG5leHBvcnQgdHlwZSBSZXNwb25zZSA9IFN0b3JlZCB8IE5vdFN0b3JlZCB8IEVycm9yO1xuIl19