"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Error = exports.Miss = exports.Hit = void 0;
const response_base_1 = require("./response-base");
const utils_1 = require("../../internal/utils");
const enums_1 = require("./enums");
const TEXT_DECODER = new TextDecoder();
/**
 * Indicates a successful list pop front request.
 * Provides `value*` accessors to retrieve the data in the appropriate format.
 */
class Hit extends response_base_1.ResponseBase {
    constructor(body) {
        super();
        this.type = enums_1.CacheListPopFrontResponse.Hit;
        this.body = body;
    }
    /**
     * Returns the data as a utf-8 string, decoded from the underlying byte array.
     * @returns string
     */
    value() {
        return TEXT_DECODER.decode(this.body);
    }
    /**
     * Returns the data as a utf-8 string, decoded from the underlying byte array.
     * @returns string
     */
    valueString() {
        return TEXT_DECODER.decode(this.body);
    }
    /**
     * Returns the data as a byte array.
     * @returns {Uint8Array}
     */
    valueUint8Array() {
        return this.body;
    }
    toString() {
        const display = (0, utils_1.truncateString)(this.valueString());
        return `${super.toString()}: ${display}`;
    }
}
exports.Hit = Hit;
/**
 * Indicates that the requested list was not available in the cache.
 */
class Miss extends response_base_1.BaseResponseMiss {
    constructor() {
        super();
        this.type = enums_1.CacheListPopFrontResponse.Miss;
    }
    value() {
        return undefined;
    }
}
exports.Miss = Miss;
/**
 * Indicates that an error occurred during the list pop front request.
 *
 * This response object includes the following fields that you can use to determine
 * how you would like to handle the error:
 *
 * - `errorCode()` - a unique Momento error code indicating the type of error that occurred.
 * - `message()` - a human-readable description of the error
 * - `innerException()` - the original error that caused the failure; can be re-thrown.
 */
class Error extends response_base_1.BaseResponseError {
    constructor(_innerException) {
        super(_innerException);
        this.type = enums_1.CacheListPopFrontResponse.Error;
    }
    value() {
        return undefined;
    }
}
exports.Error = Error;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGUtbGlzdC1wb3AtZnJvbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbWVzc2FnZXMvcmVzcG9uc2VzL2NhY2hlLWxpc3QtcG9wLWZyb250LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLG1EQUl5QjtBQUN6QixnREFBb0Q7QUFDcEQsbUNBQWtEO0FBRWxELE1BQU0sWUFBWSxHQUFHLElBQUksV0FBVyxFQUFFLENBQUM7QUFPdkM7OztHQUdHO0FBQ0gsTUFBYSxHQUFJLFNBQVEsNEJBQVk7SUFJbkMsWUFBWSxJQUFnQjtRQUMxQixLQUFLLEVBQUUsQ0FBQztRQUpELFNBQUksR0FBa0MsaUNBQXlCLENBQUMsR0FBRyxDQUFDO1FBSzNFLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ25CLENBQUM7SUFFRDs7O09BR0c7SUFDSSxLQUFLO1FBQ1YsT0FBTyxZQUFZLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN4QyxDQUFDO0lBRUQ7OztPQUdHO0lBQ0ksV0FBVztRQUNoQixPQUFPLFlBQVksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFFRDs7O09BR0c7SUFDSSxlQUFlO1FBQ3BCLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQztJQUNuQixDQUFDO0lBRWUsUUFBUTtRQUN0QixNQUFNLE9BQU8sR0FBRyxJQUFBLHNCQUFjLEVBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7UUFDbkQsT0FBTyxHQUFHLEtBQUssQ0FBQyxRQUFRLEVBQUUsS0FBSyxPQUFPLEVBQUUsQ0FBQztJQUMzQyxDQUFDO0NBQ0Y7QUFyQ0Qsa0JBcUNDO0FBRUQ7O0dBRUc7QUFDSCxNQUFhLElBQUssU0FBUSxnQ0FBZ0I7SUFJeEM7UUFDRSxLQUFLLEVBQUUsQ0FBQztRQUpELFNBQUksR0FDWCxpQ0FBeUIsQ0FBQyxJQUFJLENBQUM7SUFJakMsQ0FBQztJQUVELEtBQUs7UUFDSCxPQUFPLFNBQVMsQ0FBQztJQUNuQixDQUFDO0NBQ0Y7QUFYRCxvQkFXQztBQUVEOzs7Ozs7Ozs7R0FTRztBQUNILE1BQWEsS0FBTSxTQUFRLGlDQUFpQjtJQUcxQyxZQUFZLGVBQXlCO1FBQ25DLEtBQUssQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUhoQixTQUFJLEdBQ1gsaUNBQXlCLENBQUMsS0FBSyxDQUFDO0lBR2xDLENBQUM7SUFFRCxLQUFLO1FBQ0gsT0FBTyxTQUFTLENBQUM7SUFDbkIsQ0FBQztDQUNGO0FBVkQsc0JBVUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1Nka0Vycm9yfSBmcm9tICcuLi8uLi9lcnJvcnMnO1xuaW1wb3J0IHtcbiAgQmFzZVJlc3BvbnNlRXJyb3IsXG4gIEJhc2VSZXNwb25zZU1pc3MsXG4gIFJlc3BvbnNlQmFzZSxcbn0gZnJvbSAnLi9yZXNwb25zZS1iYXNlJztcbmltcG9ydCB7dHJ1bmNhdGVTdHJpbmd9IGZyb20gJy4uLy4uL2ludGVybmFsL3V0aWxzJztcbmltcG9ydCB7Q2FjaGVMaXN0UG9wRnJvbnRSZXNwb25zZX0gZnJvbSAnLi9lbnVtcyc7XG5cbmNvbnN0IFRFWFRfREVDT0RFUiA9IG5ldyBUZXh0RGVjb2RlcigpO1xuXG5pbnRlcmZhY2UgSVJlc3BvbnNlIHtcbiAgdmFsdWUoKTogc3RyaW5nIHwgdW5kZWZpbmVkO1xuICByZWFkb25seSB0eXBlOiBDYWNoZUxpc3RQb3BGcm9udFJlc3BvbnNlO1xufVxuXG4vKipcbiAqIEluZGljYXRlcyBhIHN1Y2Nlc3NmdWwgbGlzdCBwb3AgZnJvbnQgcmVxdWVzdC5cbiAqIFByb3ZpZGVzIGB2YWx1ZSpgIGFjY2Vzc29ycyB0byByZXRyaWV2ZSB0aGUgZGF0YSBpbiB0aGUgYXBwcm9wcmlhdGUgZm9ybWF0LlxuICovXG5leHBvcnQgY2xhc3MgSGl0IGV4dGVuZHMgUmVzcG9uc2VCYXNlIGltcGxlbWVudHMgSVJlc3BvbnNlIHtcbiAgcmVhZG9ubHkgdHlwZTogQ2FjaGVMaXN0UG9wRnJvbnRSZXNwb25zZS5IaXQgPSBDYWNoZUxpc3RQb3BGcm9udFJlc3BvbnNlLkhpdDtcbiAgcHJpdmF0ZSByZWFkb25seSBib2R5OiBVaW50OEFycmF5O1xuXG4gIGNvbnN0cnVjdG9yKGJvZHk6IFVpbnQ4QXJyYXkpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuYm9keSA9IGJvZHk7XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyB0aGUgZGF0YSBhcyBhIHV0Zi04IHN0cmluZywgZGVjb2RlZCBmcm9tIHRoZSB1bmRlcmx5aW5nIGJ5dGUgYXJyYXkuXG4gICAqIEByZXR1cm5zIHN0cmluZ1xuICAgKi9cbiAgcHVibGljIHZhbHVlKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIFRFWFRfREVDT0RFUi5kZWNvZGUodGhpcy5ib2R5KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBkYXRhIGFzIGEgdXRmLTggc3RyaW5nLCBkZWNvZGVkIGZyb20gdGhlIHVuZGVybHlpbmcgYnl0ZSBhcnJheS5cbiAgICogQHJldHVybnMgc3RyaW5nXG4gICAqL1xuICBwdWJsaWMgdmFsdWVTdHJpbmcoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gVEVYVF9ERUNPREVSLmRlY29kZSh0aGlzLmJvZHkpO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIGRhdGEgYXMgYSBieXRlIGFycmF5LlxuICAgKiBAcmV0dXJucyB7VWludDhBcnJheX1cbiAgICovXG4gIHB1YmxpYyB2YWx1ZVVpbnQ4QXJyYXkoKTogVWludDhBcnJheSB7XG4gICAgcmV0dXJuIHRoaXMuYm9keTtcbiAgfVxuXG4gIHB1YmxpYyBvdmVycmlkZSB0b1N0cmluZygpOiBzdHJpbmcge1xuICAgIGNvbnN0IGRpc3BsYXkgPSB0cnVuY2F0ZVN0cmluZyh0aGlzLnZhbHVlU3RyaW5nKCkpO1xuICAgIHJldHVybiBgJHtzdXBlci50b1N0cmluZygpfTogJHtkaXNwbGF5fWA7XG4gIH1cbn1cblxuLyoqXG4gKiBJbmRpY2F0ZXMgdGhhdCB0aGUgcmVxdWVzdGVkIGxpc3Qgd2FzIG5vdCBhdmFpbGFibGUgaW4gdGhlIGNhY2hlLlxuICovXG5leHBvcnQgY2xhc3MgTWlzcyBleHRlbmRzIEJhc2VSZXNwb25zZU1pc3MgaW1wbGVtZW50cyBJUmVzcG9uc2Uge1xuICByZWFkb25seSB0eXBlOiBDYWNoZUxpc3RQb3BGcm9udFJlc3BvbnNlLk1pc3MgPVxuICAgIENhY2hlTGlzdFBvcEZyb250UmVzcG9uc2UuTWlzcztcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICB9XG5cbiAgdmFsdWUoKTogdW5kZWZpbmVkIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG59XG5cbi8qKlxuICogSW5kaWNhdGVzIHRoYXQgYW4gZXJyb3Igb2NjdXJyZWQgZHVyaW5nIHRoZSBsaXN0IHBvcCBmcm9udCByZXF1ZXN0LlxuICpcbiAqIFRoaXMgcmVzcG9uc2Ugb2JqZWN0IGluY2x1ZGVzIHRoZSBmb2xsb3dpbmcgZmllbGRzIHRoYXQgeW91IGNhbiB1c2UgdG8gZGV0ZXJtaW5lXG4gKiBob3cgeW91IHdvdWxkIGxpa2UgdG8gaGFuZGxlIHRoZSBlcnJvcjpcbiAqXG4gKiAtIGBlcnJvckNvZGUoKWAgLSBhIHVuaXF1ZSBNb21lbnRvIGVycm9yIGNvZGUgaW5kaWNhdGluZyB0aGUgdHlwZSBvZiBlcnJvciB0aGF0IG9jY3VycmVkLlxuICogLSBgbWVzc2FnZSgpYCAtIGEgaHVtYW4tcmVhZGFibGUgZGVzY3JpcHRpb24gb2YgdGhlIGVycm9yXG4gKiAtIGBpbm5lckV4Y2VwdGlvbigpYCAtIHRoZSBvcmlnaW5hbCBlcnJvciB0aGF0IGNhdXNlZCB0aGUgZmFpbHVyZTsgY2FuIGJlIHJlLXRocm93bi5cbiAqL1xuZXhwb3J0IGNsYXNzIEVycm9yIGV4dGVuZHMgQmFzZVJlc3BvbnNlRXJyb3IgaW1wbGVtZW50cyBJUmVzcG9uc2Uge1xuICByZWFkb25seSB0eXBlOiBDYWNoZUxpc3RQb3BGcm9udFJlc3BvbnNlLkVycm9yID1cbiAgICBDYWNoZUxpc3RQb3BGcm9udFJlc3BvbnNlLkVycm9yO1xuICBjb25zdHJ1Y3RvcihfaW5uZXJFeGNlcHRpb246IFNka0Vycm9yKSB7XG4gICAgc3VwZXIoX2lubmVyRXhjZXB0aW9uKTtcbiAgfVxuXG4gIHZhbHVlKCk6IHVuZGVmaW5lZCB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBSZXNwb25zZSA9IEhpdCB8IE1pc3MgfCBFcnJvcjtcbiJdfQ==