"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CacheDecreaseTtlResponse = exports.CacheIncreaseTtlResponse = exports.CacheUpdateTtlResponse = exports.CacheItemGetTtlResponse = exports.CacheItemGetTypeResponse = exports.CacheKeysExistResponse = exports.CacheKeyExistsResponse = exports.CacheSetIfNotExistsResponse = exports.CacheSetIfPresentAndNotEqualResponse = exports.CacheSetIfAbsentOrEqualResponse = exports.CacheSetIfNotEqualResponse = exports.CacheSetIfEqualResponse = exports.CacheSetIfPresentResponse = exports.CacheSetIfAbsentResponse = exports.CacheSetBatchResponse = exports.CacheGetBatchResponse = exports.CacheIncrementResponse = exports.CacheDeleteResponse = exports.CacheSetResponse = exports.CacheGetResponse = void 0;
var CacheGetResponse;
(function (CacheGetResponse) {
    CacheGetResponse["Hit"] = "Hit";
    CacheGetResponse["Miss"] = "Miss";
    CacheGetResponse["Error"] = "Error";
})(CacheGetResponse = exports.CacheGetResponse || (exports.CacheGetResponse = {}));
var CacheSetResponse;
(function (CacheSetResponse) {
    CacheSetResponse["Success"] = "Success";
    CacheSetResponse["Error"] = "Error";
})(CacheSetResponse = exports.CacheSetResponse || (exports.CacheSetResponse = {}));
var CacheDeleteResponse;
(function (CacheDeleteResponse) {
    CacheDeleteResponse["Success"] = "Success";
    CacheDeleteResponse["Error"] = "Error";
})(CacheDeleteResponse = exports.CacheDeleteResponse || (exports.CacheDeleteResponse = {}));
var CacheIncrementResponse;
(function (CacheIncrementResponse) {
    CacheIncrementResponse["Success"] = "Success";
    CacheIncrementResponse["Error"] = "Error";
})(CacheIncrementResponse = exports.CacheIncrementResponse || (exports.CacheIncrementResponse = {}));
var CacheGetBatchResponse;
(function (CacheGetBatchResponse) {
    CacheGetBatchResponse["Success"] = "Success";
    CacheGetBatchResponse["Error"] = "Error";
})(CacheGetBatchResponse = exports.CacheGetBatchResponse || (exports.CacheGetBatchResponse = {}));
var CacheSetBatchResponse;
(function (CacheSetBatchResponse) {
    CacheSetBatchResponse["Success"] = "Success";
    CacheSetBatchResponse["Error"] = "Error";
})(CacheSetBatchResponse = exports.CacheSetBatchResponse || (exports.CacheSetBatchResponse = {}));
var CacheSetIfAbsentResponse;
(function (CacheSetIfAbsentResponse) {
    CacheSetIfAbsentResponse["Stored"] = "Stored";
    CacheSetIfAbsentResponse["NotStored"] = "NotStored";
    CacheSetIfAbsentResponse["Error"] = "Error";
})(CacheSetIfAbsentResponse = exports.CacheSetIfAbsentResponse || (exports.CacheSetIfAbsentResponse = {}));
var CacheSetIfPresentResponse;
(function (CacheSetIfPresentResponse) {
    CacheSetIfPresentResponse["Stored"] = "Stored";
    CacheSetIfPresentResponse["NotStored"] = "NotStored";
    CacheSetIfPresentResponse["Error"] = "Error";
})(CacheSetIfPresentResponse = exports.CacheSetIfPresentResponse || (exports.CacheSetIfPresentResponse = {}));
var CacheSetIfEqualResponse;
(function (CacheSetIfEqualResponse) {
    CacheSetIfEqualResponse["Stored"] = "Stored";
    CacheSetIfEqualResponse["NotStored"] = "NotStored";
    CacheSetIfEqualResponse["Error"] = "Error";
})(CacheSetIfEqualResponse = exports.CacheSetIfEqualResponse || (exports.CacheSetIfEqualResponse = {}));
var CacheSetIfNotEqualResponse;
(function (CacheSetIfNotEqualResponse) {
    CacheSetIfNotEqualResponse["Stored"] = "Stored";
    CacheSetIfNotEqualResponse["NotStored"] = "NotStored";
    CacheSetIfNotEqualResponse["Error"] = "Error";
})(CacheSetIfNotEqualResponse = exports.CacheSetIfNotEqualResponse || (exports.CacheSetIfNotEqualResponse = {}));
var CacheSetIfAbsentOrEqualResponse;
(function (CacheSetIfAbsentOrEqualResponse) {
    CacheSetIfAbsentOrEqualResponse["Stored"] = "Stored";
    CacheSetIfAbsentOrEqualResponse["NotStored"] = "NotStored";
    CacheSetIfAbsentOrEqualResponse["Error"] = "Error";
})(CacheSetIfAbsentOrEqualResponse = exports.CacheSetIfAbsentOrEqualResponse || (exports.CacheSetIfAbsentOrEqualResponse = {}));
var CacheSetIfPresentAndNotEqualResponse;
(function (CacheSetIfPresentAndNotEqualResponse) {
    CacheSetIfPresentAndNotEqualResponse["Stored"] = "Stored";
    CacheSetIfPresentAndNotEqualResponse["NotStored"] = "NotStored";
    CacheSetIfPresentAndNotEqualResponse["Error"] = "Error";
})(CacheSetIfPresentAndNotEqualResponse = exports.CacheSetIfPresentAndNotEqualResponse || (exports.CacheSetIfPresentAndNotEqualResponse = {}));
var CacheSetIfNotExistsResponse;
(function (CacheSetIfNotExistsResponse) {
    CacheSetIfNotExistsResponse["Stored"] = "Stored";
    CacheSetIfNotExistsResponse["NotStored"] = "NotStored";
    CacheSetIfNotExistsResponse["Error"] = "Error";
})(CacheSetIfNotExistsResponse = exports.CacheSetIfNotExistsResponse || (exports.CacheSetIfNotExistsResponse = {}));
var CacheKeyExistsResponse;
(function (CacheKeyExistsResponse) {
    CacheKeyExistsResponse["Success"] = "Success";
    CacheKeyExistsResponse["Error"] = "Error";
})(CacheKeyExistsResponse = exports.CacheKeyExistsResponse || (exports.CacheKeyExistsResponse = {}));
var CacheKeysExistResponse;
(function (CacheKeysExistResponse) {
    CacheKeysExistResponse["Success"] = "Success";
    CacheKeysExistResponse["Error"] = "Error";
})(CacheKeysExistResponse = exports.CacheKeysExistResponse || (exports.CacheKeysExistResponse = {}));
var CacheItemGetTypeResponse;
(function (CacheItemGetTypeResponse) {
    CacheItemGetTypeResponse["Hit"] = "Hit";
    CacheItemGetTypeResponse["Miss"] = "Miss";
    CacheItemGetTypeResponse["Error"] = "Error";
})(CacheItemGetTypeResponse = exports.CacheItemGetTypeResponse || (exports.CacheItemGetTypeResponse = {}));
var CacheItemGetTtlResponse;
(function (CacheItemGetTtlResponse) {
    CacheItemGetTtlResponse["Hit"] = "Hit";
    CacheItemGetTtlResponse["Miss"] = "Miss";
    CacheItemGetTtlResponse["Error"] = "Error";
})(CacheItemGetTtlResponse = exports.CacheItemGetTtlResponse || (exports.CacheItemGetTtlResponse = {}));
// Note: update ttl has no NotSet response type
// as it sets the ttl unconditionally. We can still
// add this NotSet case later if actually needed.
var CacheUpdateTtlResponse;
(function (CacheUpdateTtlResponse) {
    CacheUpdateTtlResponse["Set"] = "Set";
    CacheUpdateTtlResponse["Miss"] = "Miss";
    CacheUpdateTtlResponse["Error"] = "Error";
})(CacheUpdateTtlResponse = exports.CacheUpdateTtlResponse || (exports.CacheUpdateTtlResponse = {}));
var CacheIncreaseTtlResponse;
(function (CacheIncreaseTtlResponse) {
    CacheIncreaseTtlResponse["Set"] = "Set";
    CacheIncreaseTtlResponse["NotSet"] = "NotSet";
    CacheIncreaseTtlResponse["Miss"] = "Miss";
    CacheIncreaseTtlResponse["Error"] = "Error";
})(CacheIncreaseTtlResponse = exports.CacheIncreaseTtlResponse || (exports.CacheIncreaseTtlResponse = {}));
var CacheDecreaseTtlResponse;
(function (CacheDecreaseTtlResponse) {
    CacheDecreaseTtlResponse["Set"] = "Set";
    CacheDecreaseTtlResponse["NotSet"] = "NotSet";
    CacheDecreaseTtlResponse["Miss"] = "Miss";
    CacheDecreaseTtlResponse["Error"] = "Error";
})(CacheDecreaseTtlResponse = exports.CacheDecreaseTtlResponse || (exports.CacheDecreaseTtlResponse = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvbWVzc2FnZXMvcmVzcG9uc2VzL2VudW1zL2NhY2hlL3NjYWxhci9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxJQUFZLGdCQUlYO0FBSkQsV0FBWSxnQkFBZ0I7SUFDMUIsK0JBQVcsQ0FBQTtJQUNYLGlDQUFhLENBQUE7SUFDYixtQ0FBZSxDQUFBO0FBQ2pCLENBQUMsRUFKVyxnQkFBZ0IsR0FBaEIsd0JBQWdCLEtBQWhCLHdCQUFnQixRQUkzQjtBQUVELElBQVksZ0JBR1g7QUFIRCxXQUFZLGdCQUFnQjtJQUMxQix1Q0FBbUIsQ0FBQTtJQUNuQixtQ0FBZSxDQUFBO0FBQ2pCLENBQUMsRUFIVyxnQkFBZ0IsR0FBaEIsd0JBQWdCLEtBQWhCLHdCQUFnQixRQUczQjtBQUVELElBQVksbUJBR1g7QUFIRCxXQUFZLG1CQUFtQjtJQUM3QiwwQ0FBbUIsQ0FBQTtJQUNuQixzQ0FBZSxDQUFBO0FBQ2pCLENBQUMsRUFIVyxtQkFBbUIsR0FBbkIsMkJBQW1CLEtBQW5CLDJCQUFtQixRQUc5QjtBQUVELElBQVksc0JBR1g7QUFIRCxXQUFZLHNCQUFzQjtJQUNoQyw2Q0FBbUIsQ0FBQTtJQUNuQix5Q0FBZSxDQUFBO0FBQ2pCLENBQUMsRUFIVyxzQkFBc0IsR0FBdEIsOEJBQXNCLEtBQXRCLDhCQUFzQixRQUdqQztBQUVELElBQVkscUJBR1g7QUFIRCxXQUFZLHFCQUFxQjtJQUMvQiw0Q0FBbUIsQ0FBQTtJQUNuQix3Q0FBZSxDQUFBO0FBQ2pCLENBQUMsRUFIVyxxQkFBcUIsR0FBckIsNkJBQXFCLEtBQXJCLDZCQUFxQixRQUdoQztBQUVELElBQVkscUJBR1g7QUFIRCxXQUFZLHFCQUFxQjtJQUMvQiw0Q0FBbUIsQ0FBQTtJQUNuQix3Q0FBZSxDQUFBO0FBQ2pCLENBQUMsRUFIVyxxQkFBcUIsR0FBckIsNkJBQXFCLEtBQXJCLDZC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Q0FBQyxFQUxXLHdCQUF3QixHQUF4QixnQ0FBd0IsS0FBeEIsZ0NBQXdCLFFBS25DO0FBRUQsSUFBWSx3QkFLWDtBQUxELFdBQVksd0JBQXdCO0lBQ2xDLHVDQUFXLENBQUE7SUFDWCw2Q0FBaUIsQ0FBQTtJQUNqQix5Q0FBYSxDQUFBO0lBQ2IsMkNBQWUsQ0FBQTtBQUNqQixDQUFDLEVBTFcsd0JBQXdCLEdBQXhCLGdDQUF3QixLQUF4QixnQ0FBd0IsUUFLbkMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZW51bSBDYWNoZUdldFJlc3BvbnNlIHtcbiAgSGl0ID0gJ0hpdCcsXG4gIE1pc3MgPSAnTWlzcycsXG4gIEVycm9yID0gJ0Vycm9yJyxcbn1cblxuZXhwb3J0IGVudW0gQ2FjaGVTZXRSZXNwb25zZSB7XG4gIFN1Y2Nlc3MgPSAnU3VjY2VzcycsXG4gIEVycm9yID0gJ0Vycm9yJyxcbn1cblxuZXhwb3J0IGVudW0gQ2FjaGVEZWxldGVSZXNwb25zZSB7XG4gIFN1Y2Nlc3MgPSAnU3VjY2VzcycsXG4gIEVycm9yID0gJ0Vycm9yJyxcbn1cblxuZXhwb3J0IGVudW0gQ2FjaGVJbmNyZW1lbnRSZXNwb25zZSB7XG4gIFN1Y2Nlc3MgPSAnU3VjY2VzcycsXG4gIEVycm9yID0gJ0Vycm9yJyxcbn1cblxuZXhwb3J0IGVudW0gQ2FjaGVHZXRCYXRjaFJlc3BvbnNlIHtcbiAgU3VjY2VzcyA9ICdTdWNjZXNzJyxcbiAgRXJyb3IgPSAnRXJyb3InLFxufVxuXG5leHBvcnQgZW51bSBDYWNoZVNldEJhdGNoUmVzcG9uc2Uge1xuICBTdWNjZXNzID0gJ1N1Y2Nlc3MnLFxuICBFcnJvciA9ICdFcnJvcicsXG59XG5cbmV4cG9ydCBlbnVtIENhY2hlU2V0SWZBYnNlbnRSZXNwb25zZSB7XG4gIFN0b3JlZCA9ICdTdG9yZWQnLFxuICBOb3RTdG9yZWQgPSAnTm90U3RvcmVkJyxcbiAgRXJyb3IgPSAnRXJyb3InLFxufVxuXG5leHBvcnQgZW51bSBDYWNoZVNldElmUHJlc2VudFJlc3BvbnNlIHtcbiAgU3RvcmVkID0gJ1N0b3JlZCcsXG4gIE5vdFN0b3JlZCA9ICdOb3RTdG9yZWQnLFxuICBFcnJvciA9ICdFcnJvcicsXG59XG5cbmV4cG9ydCBlbnVtIENhY2hlU2V0SWZFcXVhbFJlc3BvbnNlIHtcbiAgU3RvcmVkID0gJ1N0b3JlZCcsXG4gIE5vdFN0b3JlZCA9ICdOb3RTdG9yZWQnLFxuICBFcnJvciA9ICdFcnJvcicsXG59XG5cbmV4cG9ydCBlbnVtIENhY2hlU2V0SWZOb3RFcXVhbFJlc3BvbnNlIHtcbiAgU3RvcmVkID0gJ1N0b3JlZCcsXG4gIE5vdFN0b3JlZCA9ICdOb3RTdG9yZWQnLFxuICBFcnJvciA9ICdFcnJvcicsXG59XG5cbmV4cG9ydCBlbnVtIENhY2hlU2V0SWZBYnNlbnRPckVxdWFsUmVzcG9uc2Uge1xuICBTdG9yZWQgPSAnU3RvcmVkJyxcbiAgTm90U3RvcmVkID0gJ05vdFN0b3JlZCcsXG4gIEVycm9yID0gJ0Vycm9yJyxcbn1cblxuZXhwb3J0IGVudW0gQ2FjaGVTZXRJZlByZXNlbnRBbmROb3RFcXVhbFJlc3BvbnNlIHtcbiAgU3RvcmVkID0gJ1N0b3JlZCcsXG4gIE5vdFN0b3JlZCA9ICdOb3RTdG9yZWQnLFxuICBFcnJvciA9ICdFcnJvcicsXG59XG5cbmV4cG9ydCBlbnVtIENhY2hlU2V0SWZOb3RFeGlzdHNSZXNwb25zZSB7XG4gIFN0b3JlZCA9ICdTdG9yZWQnLFxuICBOb3RTdG9yZWQgPSAnTm90U3RvcmVkJyxcbiAgRXJyb3IgPSAnRXJyb3InLFxufVxuXG5leHBvcnQgZW51bSBDYWNoZUtleUV4aXN0c1Jlc3BvbnNlIHtcbiAgU3VjY2VzcyA9ICdTdWNjZXNzJyxcbiAgRXJyb3IgPSAnRXJyb3InLFxufVxuXG5leHBvcnQgZW51bSBDYWNoZUtleXNFeGlzdFJlc3BvbnNlIHtcbiAgU3VjY2VzcyA9ICdTdWNjZXNzJyxcbiAgRXJyb3IgPSAnRXJyb3InLFxufVxuXG5leHBvcnQgZW51bSBDYWNoZUl0ZW1HZXRUeXBlUmVzcG9uc2Uge1xuICBIaXQgPSAnSGl0JyxcbiAgTWlzcyA9ICdNaXNzJyxcbiAgRXJyb3IgPSAnRXJyb3InLFxufVxuXG5leHBvcnQgZW51bSBDYWNoZUl0ZW1HZXRUdGxSZXNwb25zZSB7XG4gIEhpdCA9ICdIaXQnLFxuICBNaXNzID0gJ01pc3MnLFxuICBFcnJvciA9ICdFcnJvcicsXG59XG5cbi8vIE5vdGU6IHVwZGF0ZSB0dGwgaGFzIG5vIE5vdFNldCByZXNwb25zZSB0eXBlXG4vLyBhcyBpdCBzZXRzIHRoZSB0dGwgdW5jb25kaXRpb25hbGx5LiBXZSBjYW4gc3RpbGxcbi8vIGFkZCB0aGlzIE5vdFNldCBjYXNlIGxhdGVyIGlmIGFjdHVhbGx5IG5lZWRlZC5cbmV4cG9ydCBlbnVtIENhY2hlVXBkYXRlVHRsUmVzcG9uc2Uge1xuICBTZXQgPSAnU2V0JyxcbiAgTWlzcyA9ICdNaXNzJyxcbiAgRXJyb3IgPSAnRXJyb3InLFxufVxuXG5leHBvcnQgZW51bSBDYWNoZUluY3JlYXNlVHRsUmVzcG9uc2Uge1xuICBTZXQgPSAnU2V0JyxcbiAgTm90U2V0ID0gJ05vdFNldCcsXG4gIE1pc3MgPSAnTWlzcycsXG4gIEVycm9yID0gJ0Vycm9yJyxcbn1cblxuZXhwb3J0IGVudW0gQ2FjaGVEZWNyZWFzZVR0bFJlc3BvbnNlIHtcbiAgU2V0ID0gJ1NldCcsXG4gIE5vdFNldCA9ICdOb3RTZXQnLFxuICBNaXNzID0gJ01pc3MnLFxuICBFcnJvciA9ICdFcnJvcicsXG59XG4iXX0=