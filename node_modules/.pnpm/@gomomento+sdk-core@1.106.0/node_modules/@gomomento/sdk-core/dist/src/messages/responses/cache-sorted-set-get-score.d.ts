import { ResponseBase, BaseResponseMiss, BaseResponseError } from './response-base';
import { SdkError } from '../../errors';
import { CacheSortedSetGetScoreResponse } from './enums';
interface IResponse {
    score(): number | undefined;
    readonly type: CacheSortedSetGetScoreResponse;
}
/**
 * Indicates that the requested data was successfully retrieved from the cache.  Provides
 * `score()` accessor to retrieve score.
 */
export declare class Hit extends ResponseBase implements IResponse {
    private readonly _value;
    private readonly _score;
    readonly type: CacheSortedSetGetScoreResponse.Hit;
    constructor(score: number, value: Uint8Array);
    /**
     * Returns the value of the element in the sorted set as a Uint8Array.
     * @returns {number}
     */
    valueUint8Array(): Uint8Array;
    /**
     * Returns the value of the element in the sorted set as a string.
     * @returns {string}
     */
    valueString(): string;
    /**
     * Returns the score of the element in the sorted set.
     * @return {*}  {number}
     */
    score(): number;
    toString(): string;
}
/**
 * Indicates that the requested data was not available in the cache.
 */
export declare class Miss extends BaseResponseMiss implements IResponse {
    private readonly _value;
    readonly type: CacheSortedSetGetScoreResponse.Miss;
    constructor(value: Uint8Array);
    /**
     * Returns the value of the element in the sorted set as a Uint8Array.
     * @returns {number}
     */
    valueUint8Array(): Uint8Array;
    /**
     * Returns the score of the element in the sorted set as a string.
     * @returns {string}
     */
    valueString(): string;
    score(): undefined;
    toString(): string;
}
/**
 * Indicates that an error occurred during the sorted set get score request.
 *
 * This response object includes the following fields that you can use to determine
 * how you would like to handle the error:
 *
 * - `errorCode()` - a unique Momento error code indicating the type of error that occurred.
 * - `message()` - a human-readable description of the error
 * - `innerException()` - the original error that caused the failure; can be re-thrown.
 */
export declare class Error extends BaseResponseError implements IResponse {
    private readonly _value;
    readonly type: CacheSortedSetGetScoreResponse.Error;
    constructor(_innerException: SdkError, value: Uint8Array);
    /**
     * Returns the value of the element in the sorted set as a Uint8Array.
     * @returns {number}
     */
    valueUint8Array(): Uint8Array;
    /**
     * Returns the score of the element in the sorted set as a string.
     * @returns {string}
     */
    valueString(): string;
    score(): undefined;
}
export type Response = Hit | Miss | Error;
export {};
