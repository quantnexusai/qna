"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Error = exports.Success = void 0;
const CacheSetRemoveElement = require("./cache-set-remove-element");
const response_base_1 = require("./response-base");
const enums_1 = require("./enums");
/**
 * Indicates a Successful set remove elements request.
 */
class Success extends response_base_1.BaseResponseSuccess {
    constructor() {
        super(...arguments);
        this.type = enums_1.CacheSetRemoveElementsResponse.Success;
    }
    toSingularResponse() {
        return new CacheSetRemoveElement.Success();
    }
}
exports.Success = Success;
/**
 * Indicates that an error occurred during the set remove elements request.
 *
 * This response object includes the following fields that you can use to determine
 * how you would like to handle the error:
 *
 * - `errorCode()` - a unique Momento error code indicating the type of error that occurred.
 * - `message()` - a human-readable description of the error
 * - `innerException()` - the original error that caused the failure; can be re-thrown.
 */
class Error extends response_base_1.BaseResponseError {
    constructor(_innerException) {
        super(_innerException);
        this.type = enums_1.CacheSetRemoveElementsResponse.Error;
    }
    toSingularResponse() {
        return new CacheSetRemoveElement.Error(this._innerException);
    }
}
exports.Error = Error;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGUtc2V0LXJlbW92ZS1lbGVtZW50cy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9tZXNzYWdlcy9yZXNwb25zZXMvY2FjaGUtc2V0LXJlbW92ZS1lbGVtZW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxvRUFBb0U7QUFDcEUsbURBQXVFO0FBRXZFLG1DQUF1RDtBQU92RDs7R0FFRztBQUNILE1BQWEsT0FBUSxTQUFRLG1DQUFtQjtJQUFoRDs7UUFDVyxTQUFJLEdBQ1gsc0NBQThCLENBQUMsT0FBTyxDQUFDO0lBSTNDLENBQUM7SUFIQyxrQkFBa0I7UUFDaEIsT0FBTyxJQUFJLHFCQUFxQixDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQzdDLENBQUM7Q0FDRjtBQU5ELDBCQU1DO0FBRUQ7Ozs7Ozs7OztHQVNHO0FBQ0gsTUFBYSxLQUFNLFNBQVEsaUNBQWlCO0lBRzFDLFlBQVksZUFBeUI7UUFDbkMsS0FBSyxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBSGhCLFNBQUksR0FDWCxzQ0FBOEIsQ0FBQyxLQUFLLENBQUM7SUFHdkMsQ0FBQztJQUNELGtCQUFrQjtRQUNoQixPQUFPLElBQUkscUJBQXFCLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQztJQUMvRCxDQUFDO0NBQ0Y7QUFURCxzQkFTQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIENhY2hlU2V0UmVtb3ZlRWxlbWVudCBmcm9tICcuL2NhY2hlLXNldC1yZW1vdmUtZWxlbWVudCc7XG5pbXBvcnQge0Jhc2VSZXNwb25zZUVycm9yLCBCYXNlUmVzcG9uc2VTdWNjZXNzfSBmcm9tICcuL3Jlc3BvbnNlLWJhc2UnO1xuaW1wb3J0IHtTZGtFcnJvcn0gZnJvbSAnLi4vLi4vZXJyb3JzJztcbmltcG9ydCB7Q2FjaGVTZXRSZW1vdmVFbGVtZW50c1Jlc3BvbnNlfSBmcm9tICcuL2VudW1zJztcblxuaW50ZXJmYWNlIElSZXNwb25zZSB7XG4gIHJlYWRvbmx5IHR5cGU6IENhY2hlU2V0UmVtb3ZlRWxlbWVudHNSZXNwb25zZTtcbiAgdG9TaW5ndWxhclJlc3BvbnNlKCk6IENhY2hlU2V0UmVtb3ZlRWxlbWVudC5SZXNwb25zZTtcbn1cblxuLyoqXG4gKiBJbmRpY2F0ZXMgYSBTdWNjZXNzZnVsIHNldCByZW1vdmUgZWxlbWVudHMgcmVxdWVzdC5cbiAqL1xuZXhwb3J0IGNsYXNzIFN1Y2Nlc3MgZXh0ZW5kcyBCYXNlUmVzcG9uc2VTdWNjZXNzIGltcGxlbWVudHMgSVJlc3BvbnNlIHtcbiAgcmVhZG9ubHkgdHlwZTogQ2FjaGVTZXRSZW1vdmVFbGVtZW50c1Jlc3BvbnNlLlN1Y2Nlc3MgPVxuICAgIENhY2hlU2V0UmVtb3ZlRWxlbWVudHNSZXNwb25zZS5TdWNjZXNzO1xuICB0b1Npbmd1bGFyUmVzcG9uc2UoKTogQ2FjaGVTZXRSZW1vdmVFbGVtZW50LlN1Y2Nlc3Mge1xuICAgIHJldHVybiBuZXcgQ2FjaGVTZXRSZW1vdmVFbGVtZW50LlN1Y2Nlc3MoKTtcbiAgfVxufVxuXG4vKipcbiAqIEluZGljYXRlcyB0aGF0IGFuIGVycm9yIG9jY3VycmVkIGR1cmluZyB0aGUgc2V0IHJlbW92ZSBlbGVtZW50cyByZXF1ZXN0LlxuICpcbiAqIFRoaXMgcmVzcG9uc2Ugb2JqZWN0IGluY2x1ZGVzIHRoZSBmb2xsb3dpbmcgZmllbGRzIHRoYXQgeW91IGNhbiB1c2UgdG8gZGV0ZXJtaW5lXG4gKiBob3cgeW91IHdvdWxkIGxpa2UgdG8gaGFuZGxlIHRoZSBlcnJvcjpcbiAqXG4gKiAtIGBlcnJvckNvZGUoKWAgLSBhIHVuaXF1ZSBNb21lbnRvIGVycm9yIGNvZGUgaW5kaWNhdGluZyB0aGUgdHlwZSBvZiBlcnJvciB0aGF0IG9jY3VycmVkLlxuICogLSBgbWVzc2FnZSgpYCAtIGEgaHVtYW4tcmVhZGFibGUgZGVzY3JpcHRpb24gb2YgdGhlIGVycm9yXG4gKiAtIGBpbm5lckV4Y2VwdGlvbigpYCAtIHRoZSBvcmlnaW5hbCBlcnJvciB0aGF0IGNhdXNlZCB0aGUgZmFpbHVyZTsgY2FuIGJlIHJlLXRocm93bi5cbiAqL1xuZXhwb3J0IGNsYXNzIEVycm9yIGV4dGVuZHMgQmFzZVJlc3BvbnNlRXJyb3IgaW1wbGVtZW50cyBJUmVzcG9uc2Uge1xuICByZWFkb25seSB0eXBlOiBDYWNoZVNldFJlbW92ZUVsZW1lbnRzUmVzcG9uc2UuRXJyb3IgPVxuICAgIENhY2hlU2V0UmVtb3ZlRWxlbWVudHNSZXNwb25zZS5FcnJvcjtcbiAgY29uc3RydWN0b3IoX2lubmVyRXhjZXB0aW9uOiBTZGtFcnJvcikge1xuICAgIHN1cGVyKF9pbm5lckV4Y2VwdGlvbik7XG4gIH1cbiAgdG9TaW5ndWxhclJlc3BvbnNlKCk6IENhY2hlU2V0UmVtb3ZlRWxlbWVudC5FcnJvciB7XG4gICAgcmV0dXJuIG5ldyBDYWNoZVNldFJlbW92ZUVsZW1lbnQuRXJyb3IodGhpcy5faW5uZXJFeGNlcHRpb24pO1xuICB9XG59XG5cbmV4cG9ydCB0eXBlIFJlc3BvbnNlID0gU3VjY2VzcyB8IEVycm9yO1xuIl19