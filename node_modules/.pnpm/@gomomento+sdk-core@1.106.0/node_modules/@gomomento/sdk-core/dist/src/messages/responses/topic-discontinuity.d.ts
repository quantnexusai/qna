/**
 * Represents a discontinuity in a topic subscription.
 *
 * @remarks A subscription is created by calling {@link TopicClient.subscribe}.
 */
export declare class TopicDiscontinuity {
    private readonly _lastSequenceNumber;
    private readonly _newSequenceNumber;
    private readonly _newSequencePage;
    constructor(_lastSequenceNumber: number, _newSequenceNumber: number, _newSequencePage: number);
    /**
     * Returns the last sequence number before the discontinuity.
     * @returns number
     */
    lastSequenceNumber(): number;
    /**
     * Returns the new sequence number after the discontinuity.
     * @returns number
     */
    newSequenceNumber(): number;
    /**
     * Returns the new sequence page after the discontinuity.
     * @returns number
     */
    newSequencePage(): number;
    toString(): string;
}
